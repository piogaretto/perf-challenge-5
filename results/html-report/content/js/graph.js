/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 416.0, "minX": 0.0, "maxY": 5947.0, "series": [{"data": [[0.0, 417.0], [0.1, 417.0], [0.2, 417.0], [0.3, 417.0], [0.4, 417.0], [0.5, 417.0], [0.6, 417.0], [0.7, 417.0], [0.8, 417.0], [0.9, 418.0], [1.0, 418.0], [1.1, 418.0], [1.2, 418.0], [1.3, 418.0], [1.4, 418.0], [1.5, 418.0], [1.6, 418.0], [1.7, 418.0], [1.8, 418.0], [1.9, 418.0], [2.0, 418.0], [2.1, 418.0], [2.2, 418.0], [2.3, 418.0], [2.4, 418.0], [2.5, 418.0], [2.6, 418.0], [2.7, 418.0], [2.8, 418.0], [2.9, 418.0], [3.0, 418.0], [3.1, 418.0], [3.2, 418.0], [3.3, 418.0], [3.4, 418.0], [3.5, 419.0], [3.6, 419.0], [3.7, 419.0], [3.8, 419.0], [3.9, 419.0], [4.0, 419.0], [4.1, 419.0], [4.2, 419.0], [4.3, 419.0], [4.4, 419.0], [4.5, 419.0], [4.6, 419.0], [4.7, 419.0], [4.8, 419.0], [4.9, 419.0], [5.0, 419.0], [5.1, 419.0], [5.2, 419.0], [5.3, 420.0], [5.4, 420.0], [5.5, 420.0], [5.6, 420.0], [5.7, 420.0], [5.8, 420.0], [5.9, 420.0], [6.0, 420.0], [6.1, 420.0], [6.2, 420.0], [6.3, 420.0], [6.4, 420.0], [6.5, 420.0], [6.6, 420.0], [6.7, 420.0], [6.8, 420.0], [6.9, 420.0], [7.0, 421.0], [7.1, 421.0], [7.2, 421.0], [7.3, 421.0], [7.4, 421.0], [7.5, 421.0], [7.6, 421.0], [7.7, 421.0], [7.8, 421.0], [7.9, 422.0], [8.0, 422.0], [8.1, 422.0], [8.2, 422.0], [8.3, 422.0], [8.4, 422.0], [8.5, 422.0], [8.6, 422.0], [8.7, 422.0], [8.8, 422.0], [8.9, 422.0], [9.0, 422.0], [9.1, 422.0], [9.2, 422.0], [9.3, 422.0], [9.4, 422.0], [9.5, 422.0], [9.6, 422.0], [9.7, 422.0], [9.8, 422.0], [9.9, 422.0], [10.0, 422.0], [10.1, 422.0], [10.2, 422.0], [10.3, 422.0], [10.4, 422.0], [10.5, 424.0], [10.6, 424.0], [10.7, 424.0], [10.8, 424.0], [10.9, 424.0], [11.0, 424.0], [11.1, 424.0], [11.2, 424.0], [11.3, 424.0], [11.4, 427.0], [11.5, 427.0], [11.6, 427.0], [11.7, 427.0], [11.8, 427.0], [11.9, 427.0], [12.0, 427.0], [12.1, 427.0], [12.2, 430.0], [12.3, 430.0], [12.4, 430.0], [12.5, 430.0], [12.6, 430.0], [12.7, 430.0], [12.8, 430.0], [12.9, 430.0], [13.0, 430.0], [13.1, 431.0], [13.2, 431.0], [13.3, 431.0], [13.4, 431.0], [13.5, 431.0], [13.6, 431.0], [13.7, 431.0], [13.8, 431.0], [13.9, 431.0], [14.0, 436.0], [14.1, 436.0], [14.2, 436.0], [14.3, 436.0], [14.4, 436.0], [14.5, 436.0], [14.6, 436.0], [14.7, 436.0], [14.8, 448.0], [14.9, 448.0], [15.0, 448.0], [15.1, 448.0], [15.2, 448.0], [15.3, 448.0], [15.4, 448.0], [15.5, 448.0], [15.6, 448.0], [15.7, 451.0], [15.8, 451.0], [15.9, 451.0], [16.0, 451.0], [16.1, 451.0], [16.2, 451.0], [16.3, 451.0], [16.4, 451.0], [16.5, 451.0], [16.6, 462.0], [16.7, 462.0], [16.8, 462.0], [16.9, 462.0], [17.0, 462.0], [17.1, 462.0], [17.2, 462.0], [17.3, 462.0], [17.4, 463.0], [17.5, 463.0], [17.6, 463.0], [17.7, 463.0], [17.8, 463.0], [17.9, 463.0], [18.0, 463.0], [18.1, 463.0], [18.2, 463.0], [18.3, 465.0], [18.4, 465.0], [18.5, 465.0], [18.6, 465.0], [18.7, 465.0], [18.8, 465.0], [18.9, 465.0], [19.0, 465.0], [19.1, 465.0], [19.2, 465.0], [19.3, 465.0], [19.4, 465.0], [19.5, 465.0], [19.6, 465.0], [19.7, 465.0], [19.8, 465.0], [19.9, 465.0], [20.0, 465.0], [20.1, 467.0], [20.2, 467.0], [20.3, 467.0], [20.4, 467.0], [20.5, 467.0], [20.6, 467.0], [20.7, 467.0], [20.8, 467.0], [20.9, 479.0], [21.0, 479.0], [21.1, 479.0], [21.2, 479.0], [21.3, 479.0], [21.4, 479.0], [21.5, 479.0], [21.6, 479.0], [21.7, 479.0], [21.8, 493.0], [21.9, 493.0], [22.0, 493.0], [22.1, 493.0], [22.2, 493.0], [22.3, 493.0], [22.4, 493.0], [22.5, 493.0], [22.6, 493.0], [22.7, 496.0], [22.8, 496.0], [22.9, 496.0], [23.0, 496.0], [23.1, 496.0], [23.2, 496.0], [23.3, 496.0], [23.4, 496.0], [23.5, 508.0], [23.6, 508.0], [23.7, 508.0], [23.8, 508.0], [23.9, 508.0], [24.0, 508.0], [24.1, 508.0], [24.2, 508.0], [24.3, 508.0], [24.4, 519.0], [24.5, 519.0], [24.6, 519.0], [24.7, 519.0], [24.8, 519.0], [24.9, 519.0], [25.0, 519.0], [25.1, 519.0], [25.2, 519.0], [25.3, 534.0], [25.4, 534.0], [25.5, 534.0], [25.6, 534.0], [25.7, 534.0], [25.8, 534.0], [25.9, 534.0], [26.0, 534.0], [26.1, 537.0], [26.2, 537.0], [26.3, 537.0], [26.4, 537.0], [26.5, 537.0], [26.6, 537.0], [26.7, 537.0], [26.8, 537.0], [26.9, 537.0], [27.0, 539.0], [27.1, 539.0], [27.2, 539.0], [27.3, 539.0], [27.4, 539.0], [27.5, 539.0], [27.6, 539.0], [27.7, 539.0], [27.8, 539.0], [27.9, 542.0], [28.0, 542.0], [28.1, 542.0], [28.2, 542.0], [28.3, 542.0], [28.4, 542.0], [28.5, 542.0], [28.6, 542.0], [28.7, 548.0], [28.8, 548.0], [28.9, 548.0], [29.0, 548.0], [29.1, 548.0], [29.2, 548.0], [29.3, 548.0], [29.4, 548.0], [29.5, 548.0], [29.6, 566.0], [29.7, 566.0], [29.8, 566.0], [29.9, 566.0], [30.0, 566.0], [30.1, 566.0], [30.2, 566.0], [30.3, 566.0], [30.4, 566.0], [30.5, 579.0], [30.6, 579.0], [30.7, 579.0], [30.8, 579.0], [30.9, 579.0], [31.0, 579.0], [31.1, 579.0], [31.2, 579.0], [31.3, 579.0], [31.4, 582.0], [31.5, 582.0], [31.6, 582.0], [31.7, 582.0], [31.8, 582.0], [31.9, 582.0], [32.0, 582.0], [32.1, 582.0], [32.2, 590.0], [32.3, 590.0], [32.4, 590.0], [32.5, 590.0], [32.6, 590.0], [32.7, 590.0], [32.8, 590.0], [32.9, 590.0], [33.0, 590.0], [33.1, 605.0], [33.2, 605.0], [33.3, 605.0], [33.4, 605.0], [33.5, 605.0], [33.6, 605.0], [33.7, 605.0], [33.8, 605.0], [33.9, 605.0], [34.0, 606.0], [34.1, 606.0], [34.2, 606.0], [34.3, 606.0], [34.4, 606.0], [34.5, 606.0], [34.6, 606.0], [34.7, 606.0], [34.8, 608.0], [34.9, 608.0], [35.0, 608.0], [35.1, 608.0], [35.2, 608.0], [35.3, 608.0], [35.4, 608.0], [35.5, 608.0], [35.6, 608.0], [35.7, 611.0], [35.8, 611.0], [35.9, 611.0], [36.0, 611.0], [36.1, 611.0], [36.2, 611.0], [36.3, 611.0], [36.4, 611.0], [36.5, 611.0], [36.6, 638.0], [36.7, 638.0], [36.8, 638.0], [36.9, 638.0], [37.0, 638.0], [37.1, 638.0], [37.2, 638.0], [37.3, 638.0], [37.4, 641.0], [37.5, 641.0], [37.6, 641.0], [37.7, 641.0], [37.8, 641.0], [37.9, 641.0], [38.0, 641.0], [38.1, 641.0], [38.2, 641.0], [38.3, 642.0], [38.4, 642.0], [38.5, 642.0], [38.6, 642.0], [38.7, 642.0], [38.8, 642.0], [38.9, 642.0], [39.0, 642.0], [39.1, 642.0], [39.2, 682.0], [39.3, 682.0], [39.4, 682.0], [39.5, 682.0], [39.6, 682.0], [39.7, 682.0], [39.8, 682.0], [39.9, 682.0], [40.0, 682.0], [40.1, 692.0], [40.2, 692.0], [40.3, 692.0], [40.4, 692.0], [40.5, 692.0], [40.6, 692.0], [40.7, 692.0], [40.8, 692.0], [40.9, 699.0], [41.0, 699.0], [41.1, 699.0], [41.2, 699.0], [41.3, 699.0], [41.4, 699.0], [41.5, 699.0], [41.6, 699.0], [41.7, 699.0], [41.8, 721.0], [41.9, 721.0], [42.0, 721.0], [42.1, 721.0], [42.2, 721.0], [42.3, 721.0], [42.4, 721.0], [42.5, 721.0], [42.6, 721.0], [42.7, 722.0], [42.8, 722.0], [42.9, 722.0], [43.0, 722.0], [43.1, 722.0], [43.2, 722.0], [43.3, 722.0], [43.4, 722.0], [43.5, 729.0], [43.6, 729.0], [43.7, 729.0], [43.8, 729.0], [43.9, 729.0], [44.0, 729.0], [44.1, 729.0], [44.2, 729.0], [44.3, 729.0], [44.4, 733.0], [44.5, 733.0], [44.6, 733.0], [44.7, 733.0], [44.8, 733.0], [44.9, 733.0], [45.0, 733.0], [45.1, 733.0], [45.2, 733.0], [45.3, 743.0], [45.4, 743.0], [45.5, 743.0], [45.6, 743.0], [45.7, 743.0], [45.8, 743.0], [45.9, 743.0], [46.0, 743.0], [46.1, 750.0], [46.2, 750.0], [46.3, 750.0], [46.4, 750.0], [46.5, 750.0], [46.6, 750.0], [46.7, 750.0], [46.8, 750.0], [46.9, 750.0], [47.0, 774.0], [47.1, 774.0], [47.2, 774.0], [47.3, 774.0], [47.4, 774.0], [47.5, 774.0], [47.6, 774.0], [47.7, 774.0], [47.8, 774.0], [47.9, 782.0], [48.0, 782.0], [48.1, 782.0], [48.2, 782.0], [48.3, 782.0], [48.4, 782.0], [48.5, 782.0], [48.6, 782.0], [48.7, 798.0], [48.8, 798.0], [48.9, 798.0], [49.0, 798.0], [49.1, 798.0], [49.2, 798.0], [49.3, 798.0], [49.4, 798.0], [49.5, 798.0], [49.6, 806.0], [49.7, 806.0], [49.8, 806.0], [49.9, 806.0], [50.0, 806.0], [50.1, 806.0], [50.2, 806.0], [50.3, 806.0], [50.4, 806.0], [50.5, 826.0], [50.6, 826.0], [50.7, 826.0], [50.8, 826.0], [50.9, 826.0], [51.0, 826.0], [51.1, 826.0], [51.2, 826.0], [51.3, 826.0], [51.4, 837.0], [51.5, 837.0], [51.6, 837.0], [51.7, 837.0], [51.8, 837.0], [51.9, 837.0], [52.0, 837.0], [52.1, 837.0], [52.2, 888.0], [52.3, 888.0], [52.4, 888.0], [52.5, 888.0], [52.6, 888.0], [52.7, 888.0], [52.8, 888.0], [52.9, 888.0], [53.0, 888.0], [53.1, 916.0], [53.2, 916.0], [53.3, 916.0], [53.4, 916.0], [53.5, 916.0], [53.6, 916.0], [53.7, 916.0], [53.8, 916.0], [53.9, 916.0], [54.0, 921.0], [54.1, 921.0], [54.2, 921.0], [54.3, 921.0], [54.4, 921.0], [54.5, 921.0], [54.6, 921.0], [54.7, 921.0], [54.8, 953.0], [54.9, 953.0], [55.0, 953.0], [55.1, 953.0], [55.2, 953.0], [55.3, 953.0], [55.4, 953.0], [55.5, 953.0], [55.6, 953.0], [55.7, 958.0], [55.8, 958.0], [55.9, 958.0], [56.0, 958.0], [56.1, 958.0], [56.2, 958.0], [56.3, 958.0], [56.4, 958.0], [56.5, 958.0], [56.6, 962.0], [56.7, 962.0], [56.8, 962.0], [56.9, 962.0], [57.0, 962.0], [57.1, 962.0], [57.2, 962.0], [57.3, 962.0], [57.4, 993.0], [57.5, 993.0], [57.6, 993.0], [57.7, 993.0], [57.8, 993.0], [57.9, 993.0], [58.0, 993.0], [58.1, 993.0], [58.2, 993.0], [58.3, 1009.0], [58.4, 1009.0], [58.5, 1009.0], [58.6, 1009.0], [58.7, 1009.0], [58.8, 1009.0], [58.9, 1009.0], [59.0, 1009.0], [59.1, 1009.0], [59.2, 1092.0], [59.3, 1092.0], [59.4, 1092.0], [59.5, 1092.0], [59.6, 1092.0], [59.7, 1092.0], [59.8, 1092.0], [59.9, 1092.0], [60.0, 1092.0], [60.1, 1121.0], [60.2, 1121.0], [60.3, 1121.0], [60.4, 1121.0], [60.5, 1121.0], [60.6, 1121.0], [60.7, 1121.0], [60.8, 1121.0], [60.9, 1165.0], [61.0, 1165.0], [61.1, 1165.0], [61.2, 1165.0], [61.3, 1165.0], [61.4, 1165.0], [61.5, 1165.0], [61.6, 1165.0], [61.7, 1165.0], [61.8, 1174.0], [61.9, 1174.0], [62.0, 1174.0], [62.1, 1174.0], [62.2, 1174.0], [62.3, 1174.0], [62.4, 1174.0], [62.5, 1174.0], [62.6, 1174.0], [62.7, 1183.0], [62.8, 1183.0], [62.9, 1183.0], [63.0, 1183.0], [63.1, 1183.0], [63.2, 1183.0], [63.3, 1183.0], [63.4, 1183.0], [63.5, 1192.0], [63.6, 1192.0], [63.7, 1192.0], [63.8, 1192.0], [63.9, 1192.0], [64.0, 1192.0], [64.1, 1192.0], [64.2, 1192.0], [64.3, 1192.0], [64.4, 1209.0], [64.5, 1209.0], [64.6, 1209.0], [64.7, 1209.0], [64.8, 1209.0], [64.9, 1209.0], [65.0, 1209.0], [65.1, 1209.0], [65.2, 1209.0], [65.3, 1242.0], [65.4, 1242.0], [65.5, 1242.0], [65.6, 1242.0], [65.7, 1242.0], [65.8, 1242.0], [65.9, 1242.0], [66.0, 1242.0], [66.1, 1250.0], [66.2, 1250.0], [66.3, 1250.0], [66.4, 1250.0], [66.5, 1250.0], [66.6, 1250.0], [66.7, 1250.0], [66.8, 1250.0], [66.9, 1250.0], [67.0, 1255.0], [67.1, 1255.0], [67.2, 1255.0], [67.3, 1255.0], [67.4, 1255.0], [67.5, 1255.0], [67.6, 1255.0], [67.7, 1255.0], [67.8, 1255.0], [67.9, 1269.0], [68.0, 1269.0], [68.1, 1269.0], [68.2, 1269.0], [68.3, 1269.0], [68.4, 1269.0], [68.5, 1269.0], [68.6, 1269.0], [68.7, 1278.0], [68.8, 1278.0], [68.9, 1278.0], [69.0, 1278.0], [69.1, 1278.0], [69.2, 1278.0], [69.3, 1278.0], [69.4, 1278.0], [69.5, 1278.0], [69.6, 1295.0], [69.7, 1295.0], [69.8, 1295.0], [69.9, 1295.0], [70.0, 1295.0], [70.1, 1295.0], [70.2, 1295.0], [70.3, 1295.0], [70.4, 1295.0], [70.5, 1309.0], [70.6, 1309.0], [70.7, 1309.0], [70.8, 1309.0], [70.9, 1309.0], [71.0, 1309.0], [71.1, 1309.0], [71.2, 1309.0], [71.3, 1309.0], [71.4, 1379.0], [71.5, 1379.0], [71.6, 1379.0], [71.7, 1379.0], [71.8, 1379.0], [71.9, 1379.0], [72.0, 1379.0], [72.1, 1379.0], [72.2, 1416.0], [72.3, 1416.0], [72.4, 1416.0], [72.5, 1416.0], [72.6, 1416.0], [72.7, 1416.0], [72.8, 1416.0], [72.9, 1416.0], [73.0, 1416.0], [73.1, 1493.0], [73.2, 1493.0], [73.3, 1493.0], [73.4, 1493.0], [73.5, 1493.0], [73.6, 1493.0], [73.7, 1493.0], [73.8, 1493.0], [73.9, 1493.0], [74.0, 1520.0], [74.1, 1520.0], [74.2, 1520.0], [74.3, 1520.0], [74.4, 1520.0], [74.5, 1520.0], [74.6, 1520.0], [74.7, 1520.0], [74.8, 1523.0], [74.9, 1523.0], [75.0, 1523.0], [75.1, 1523.0], [75.2, 1523.0], [75.3, 1523.0], [75.4, 1523.0], [75.5, 1523.0], [75.6, 1523.0], [75.7, 1574.0], [75.8, 1574.0], [75.9, 1574.0], [76.0, 1574.0], [76.1, 1574.0], [76.2, 1574.0], [76.3, 1574.0], [76.4, 1574.0], [76.5, 1574.0], [76.6, 1579.0], [76.7, 1579.0], [76.8, 1579.0], [76.9, 1579.0], [77.0, 1579.0], [77.1, 1579.0], [77.2, 1579.0], [77.3, 1579.0], [77.4, 1580.0], [77.5, 1580.0], [77.6, 1580.0], [77.7, 1580.0], [77.8, 1580.0], [77.9, 1580.0], [78.0, 1580.0], [78.1, 1580.0], [78.2, 1580.0], [78.3, 1646.0], [78.4, 1646.0], [78.5, 1646.0], [78.6, 1646.0], [78.7, 1646.0], [78.8, 1646.0], [78.9, 1646.0], [79.0, 1646.0], [79.1, 1646.0], [79.2, 1677.0], [79.3, 1677.0], [79.4, 1677.0], [79.5, 1677.0], [79.6, 1677.0], [79.7, 1677.0], [79.8, 1677.0], [79.9, 1677.0], [80.0, 1734.0], [80.1, 1734.0], [80.2, 1734.0], [80.3, 1734.0], [80.4, 1734.0], [80.5, 1734.0], [80.6, 1734.0], [80.7, 1734.0], [80.8, 1734.0], [80.9, 1735.0], [81.0, 1735.0], [81.1, 1735.0], [81.2, 1735.0], [81.3, 1735.0], [81.4, 1735.0], [81.5, 1735.0], [81.6, 1735.0], [81.7, 1735.0], [81.8, 1745.0], [81.9, 1745.0], [82.0, 1745.0], [82.1, 1745.0], [82.2, 1745.0], [82.3, 1745.0], [82.4, 1745.0], [82.5, 1745.0], [82.6, 1745.0], [82.7, 1833.0], [82.8, 1833.0], [82.9, 1833.0], [83.0, 1833.0], [83.1, 1833.0], [83.2, 1833.0], [83.3, 1833.0], [83.4, 1833.0], [83.5, 1874.0], [83.6, 1874.0], [83.7, 1874.0], [83.8, 1874.0], [83.9, 1874.0], [84.0, 1874.0], [84.1, 1874.0], [84.2, 1874.0], [84.3, 1874.0], [84.4, 1925.0], [84.5, 1925.0], [84.6, 1925.0], [84.7, 1925.0], [84.8, 1925.0], [84.9, 1925.0], [85.0, 1925.0], [85.1, 1925.0], [85.2, 1925.0], [85.3, 1989.0], [85.4, 1989.0], [85.5, 1989.0], [85.6, 1989.0], [85.7, 1989.0], [85.8, 1989.0], [85.9, 1989.0], [86.0, 1989.0], [86.1, 2011.0], [86.2, 2011.0], [86.3, 2011.0], [86.4, 2011.0], [86.5, 2011.0], [86.6, 2011.0], [86.7, 2011.0], [86.8, 2011.0], [86.9, 2011.0], [87.0, 2059.0], [87.1, 2059.0], [87.2, 2059.0], [87.3, 2059.0], [87.4, 2059.0], [87.5, 2059.0], [87.6, 2059.0], [87.7, 2059.0], [87.8, 2059.0], [87.9, 2071.0], [88.0, 2071.0], [88.1, 2071.0], [88.2, 2071.0], [88.3, 2071.0], [88.4, 2071.0], [88.5, 2071.0], [88.6, 2071.0], [88.7, 2175.0], [88.8, 2175.0], [88.9, 2175.0], [89.0, 2175.0], [89.1, 2175.0], [89.2, 2175.0], [89.3, 2175.0], [89.4, 2175.0], [89.5, 2175.0], [89.6, 2179.0], [89.7, 2179.0], [89.8, 2179.0], [89.9, 2179.0], [90.0, 2179.0], [90.1, 2179.0], [90.2, 2179.0], [90.3, 2179.0], [90.4, 2179.0], [90.5, 2193.0], [90.6, 2193.0], [90.7, 2193.0], [90.8, 2193.0], [90.9, 2193.0], [91.0, 2193.0], [91.1, 2193.0], [91.2, 2193.0], [91.3, 2193.0], [91.4, 2207.0], [91.5, 2207.0], [91.6, 2207.0], [91.7, 2207.0], [91.8, 2207.0], [91.9, 2207.0], [92.0, 2207.0], [92.1, 2207.0], [92.2, 2219.0], [92.3, 2219.0], [92.4, 2219.0], [92.5, 2219.0], [92.6, 2219.0], [92.7, 2219.0], [92.8, 2219.0], [92.9, 2219.0], [93.0, 2219.0], [93.1, 2520.0], [93.2, 2520.0], [93.3, 2520.0], [93.4, 2520.0], [93.5, 2520.0], [93.6, 2520.0], [93.7, 2520.0], [93.8, 2520.0], [93.9, 2520.0], [94.0, 2646.0], [94.1, 2646.0], [94.2, 2646.0], [94.3, 2646.0], [94.4, 2646.0], [94.5, 2646.0], [94.6, 2646.0], [94.7, 2646.0], [94.8, 2758.0], [94.9, 2758.0], [95.0, 2758.0], [95.1, 2758.0], [95.2, 2758.0], [95.3, 2758.0], [95.4, 2758.0], [95.5, 2758.0], [95.6, 2758.0], [95.7, 2847.0], [95.8, 2847.0], [95.9, 2847.0], [96.0, 2847.0], [96.1, 2847.0], [96.2, 2847.0], [96.3, 2847.0], [96.4, 2847.0], [96.5, 2847.0], [96.6, 2863.0], [96.7, 2863.0], [96.8, 2863.0], [96.9, 2863.0], [97.0, 2863.0], [97.1, 2863.0], [97.2, 2863.0], [97.3, 2863.0], [97.4, 2944.0], [97.5, 2944.0], [97.6, 2944.0], [97.7, 2944.0], [97.8, 2944.0], [97.9, 2944.0], [98.0, 2944.0], [98.1, 2944.0], [98.2, 2944.0], [98.3, 3385.0], [98.4, 3385.0], [98.5, 3385.0], [98.6, 3385.0], [98.7, 3385.0], [98.8, 3385.0], [98.9, 3385.0], [99.0, 3385.0], [99.1, 3385.0], [99.2, 3883.0], [99.3, 3883.0], [99.4, 3883.0], [99.5, 3883.0], [99.6, 3883.0], [99.7, 3883.0], [99.8, 3883.0], [99.9, 3883.0]], "isOverall": false, "label": "Base64 encode test", "isController": false}, {"data": [[0.0, 417.0], [0.1, 417.0], [0.2, 417.0], [0.3, 417.0], [0.4, 417.0], [0.5, 417.0], [0.6, 417.0], [0.7, 418.0], [0.8, 418.0], [0.9, 418.0], [1.0, 418.0], [1.1, 418.0], [1.2, 418.0], [1.3, 418.0], [1.4, 419.0], [1.5, 419.0], [1.6, 419.0], [1.7, 419.0], [1.8, 419.0], [1.9, 419.0], [2.0, 419.0], [2.1, 420.0], [2.2, 420.0], [2.3, 420.0], [2.4, 420.0], [2.5, 420.0], [2.6, 420.0], [2.7, 420.0], [2.8, 421.0], [2.9, 421.0], [3.0, 421.0], [3.1, 421.0], [3.2, 421.0], [3.3, 421.0], [3.4, 421.0], [3.5, 421.0], [3.6, 421.0], [3.7, 421.0], [3.8, 421.0], [3.9, 421.0], [4.0, 421.0], [4.1, 421.0], [4.2, 422.0], [4.3, 422.0], [4.4, 422.0], [4.5, 422.0], [4.6, 422.0], [4.7, 422.0], [4.8, 422.0], [4.9, 422.0], [5.0, 422.0], [5.1, 422.0], [5.2, 422.0], [5.3, 422.0], [5.4, 422.0], [5.5, 422.0], [5.6, 423.0], [5.7, 423.0], [5.8, 423.0], [5.9, 423.0], [6.0, 423.0], [6.1, 423.0], [6.2, 423.0], [6.3, 423.0], [6.4, 423.0], [6.5, 423.0], [6.6, 423.0], [6.7, 423.0], [6.8, 423.0], [6.9, 423.0], [7.0, 423.0], [7.1, 423.0], [7.2, 423.0], [7.3, 423.0], [7.4, 423.0], [7.5, 423.0], [7.6, 423.0], [7.7, 424.0], [7.8, 424.0], [7.9, 424.0], [8.0, 424.0], [8.1, 424.0], [8.2, 424.0], [8.3, 424.0], [8.4, 424.0], [8.5, 424.0], [8.6, 424.0], [8.7, 424.0], [8.8, 424.0], [8.9, 424.0], [9.0, 424.0], [9.1, 425.0], [9.2, 425.0], [9.3, 425.0], [9.4, 425.0], [9.5, 425.0], [9.6, 425.0], [9.7, 425.0], [9.8, 425.0], [9.9, 425.0], [10.0, 425.0], [10.1, 425.0], [10.2, 425.0], [10.3, 425.0], [10.4, 425.0], [10.5, 425.0], [10.6, 425.0], [10.7, 425.0], [10.8, 425.0], [10.9, 425.0], [11.0, 425.0], [11.1, 425.0], [11.2, 426.0], [11.3, 426.0], [11.4, 426.0], [11.5, 426.0], [11.6, 426.0], [11.7, 426.0], [11.8, 426.0], [11.9, 426.0], [12.0, 426.0], [12.1, 426.0], [12.2, 426.0], [12.3, 426.0], [12.4, 426.0], [12.5, 426.0], [12.6, 427.0], [12.7, 427.0], [12.8, 427.0], [12.9, 427.0], [13.0, 427.0], [13.1, 427.0], [13.2, 427.0], [13.3, 432.0], [13.4, 432.0], [13.5, 432.0], [13.6, 432.0], [13.7, 432.0], [13.8, 432.0], [13.9, 432.0], [14.0, 434.0], [14.1, 434.0], [14.2, 434.0], [14.3, 434.0], [14.4, 434.0], [14.5, 434.0], [14.6, 434.0], [14.7, 438.0], [14.8, 438.0], [14.9, 438.0], [15.0, 438.0], [15.1, 438.0], [15.2, 438.0], [15.3, 438.0], [15.4, 439.0], [15.5, 439.0], [15.6, 439.0], [15.7, 439.0], [15.8, 439.0], [15.9, 439.0], [16.0, 439.0], [16.1, 450.0], [16.2, 450.0], [16.3, 450.0], [16.4, 450.0], [16.5, 450.0], [16.6, 450.0], [16.7, 450.0], [16.8, 466.0], [16.9, 466.0], [17.0, 466.0], [17.1, 466.0], [17.2, 466.0], [17.3, 466.0], [17.4, 466.0], [17.5, 467.0], [17.6, 467.0], [17.7, 467.0], [17.8, 467.0], [17.9, 467.0], [18.0, 467.0], [18.1, 467.0], [18.2, 477.0], [18.3, 477.0], [18.4, 477.0], [18.5, 477.0], [18.6, 477.0], [18.7, 477.0], [18.8, 477.0], [18.9, 485.0], [19.0, 485.0], [19.1, 485.0], [19.2, 485.0], [19.3, 485.0], [19.4, 485.0], [19.5, 485.0], [19.6, 485.0], [19.7, 485.0], [19.8, 485.0], [19.9, 485.0], [20.0, 485.0], [20.1, 485.0], [20.2, 485.0], [20.3, 490.0], [20.4, 490.0], [20.5, 490.0], [20.6, 490.0], [20.7, 490.0], [20.8, 490.0], [20.9, 490.0], [21.0, 504.0], [21.1, 504.0], [21.2, 504.0], [21.3, 504.0], [21.4, 504.0], [21.5, 504.0], [21.6, 504.0], [21.7, 516.0], [21.8, 516.0], [21.9, 516.0], [22.0, 516.0], [22.1, 516.0], [22.2, 516.0], [22.3, 516.0], [22.4, 526.0], [22.5, 526.0], [22.6, 526.0], [22.7, 526.0], [22.8, 526.0], [22.9, 526.0], [23.0, 526.0], [23.1, 527.0], [23.2, 527.0], [23.3, 527.0], [23.4, 527.0], [23.5, 527.0], [23.6, 527.0], [23.7, 527.0], [23.8, 528.0], [23.9, 528.0], [24.0, 528.0], [24.1, 528.0], [24.2, 528.0], [24.3, 528.0], [24.4, 528.0], [24.5, 546.0], [24.6, 546.0], [24.7, 546.0], [24.8, 546.0], [24.9, 546.0], [25.0, 546.0], [25.1, 546.0], [25.2, 549.0], [25.3, 549.0], [25.4, 549.0], [25.5, 549.0], [25.6, 549.0], [25.7, 549.0], [25.8, 549.0], [25.9, 557.0], [26.0, 557.0], [26.1, 557.0], [26.2, 557.0], [26.3, 557.0], [26.4, 557.0], [26.5, 557.0], [26.6, 558.0], [26.7, 558.0], [26.8, 558.0], [26.9, 558.0], [27.0, 558.0], [27.1, 558.0], [27.2, 558.0], [27.3, 559.0], [27.4, 559.0], [27.5, 559.0], [27.6, 559.0], [27.7, 559.0], [27.8, 559.0], [27.9, 559.0], [28.0, 561.0], [28.1, 561.0], [28.2, 561.0], [28.3, 561.0], [28.4, 561.0], [28.5, 561.0], [28.6, 561.0], [28.7, 579.0], [28.8, 579.0], [28.9, 579.0], [29.0, 579.0], [29.1, 579.0], [29.2, 579.0], [29.3, 579.0], [29.4, 585.0], [29.5, 585.0], [29.6, 585.0], [29.7, 585.0], [29.8, 585.0], [29.9, 585.0], [30.0, 585.0], [30.1, 587.0], [30.2, 587.0], [30.3, 587.0], [30.4, 587.0], [30.5, 587.0], [30.6, 587.0], [30.7, 587.0], [30.8, 598.0], [30.9, 598.0], [31.0, 598.0], [31.1, 598.0], [31.2, 598.0], [31.3, 598.0], [31.4, 598.0], [31.5, 606.0], [31.6, 606.0], [31.7, 606.0], [31.8, 606.0], [31.9, 606.0], [32.0, 606.0], [32.1, 606.0], [32.2, 616.0], [32.3, 616.0], [32.4, 616.0], [32.5, 616.0], [32.6, 616.0], [32.7, 616.0], [32.8, 616.0], [32.9, 636.0], [33.0, 636.0], [33.1, 636.0], [33.2, 636.0], [33.3, 636.0], [33.4, 636.0], [33.5, 636.0], [33.6, 637.0], [33.7, 637.0], [33.8, 637.0], [33.9, 637.0], [34.0, 637.0], [34.1, 637.0], [34.2, 637.0], [34.3, 641.0], [34.4, 641.0], [34.5, 641.0], [34.6, 641.0], [34.7, 641.0], [34.8, 641.0], [34.9, 641.0], [35.0, 644.0], [35.1, 644.0], [35.2, 644.0], [35.3, 644.0], [35.4, 644.0], [35.5, 644.0], [35.6, 644.0], [35.7, 679.0], [35.8, 679.0], [35.9, 679.0], [36.0, 679.0], [36.1, 679.0], [36.2, 679.0], [36.3, 679.0], [36.4, 691.0], [36.5, 691.0], [36.6, 691.0], [36.7, 691.0], [36.8, 691.0], [36.9, 691.0], [37.0, 691.0], [37.1, 691.0], [37.2, 691.0], [37.3, 691.0], [37.4, 691.0], [37.5, 691.0], [37.6, 691.0], [37.7, 691.0], [37.8, 696.0], [37.9, 696.0], [38.0, 696.0], [38.1, 696.0], [38.2, 696.0], [38.3, 696.0], [38.4, 696.0], [38.5, 698.0], [38.6, 698.0], [38.7, 698.0], [38.8, 698.0], [38.9, 698.0], [39.0, 698.0], [39.1, 698.0], [39.2, 699.0], [39.3, 699.0], [39.4, 699.0], [39.5, 699.0], [39.6, 699.0], [39.7, 699.0], [39.8, 699.0], [39.9, 705.0], [40.0, 705.0], [40.1, 705.0], [40.2, 705.0], [40.3, 705.0], [40.4, 705.0], [40.5, 705.0], [40.6, 711.0], [40.7, 711.0], [40.8, 711.0], [40.9, 711.0], [41.0, 711.0], [41.1, 711.0], [41.2, 711.0], [41.3, 714.0], [41.4, 714.0], [41.5, 714.0], [41.6, 714.0], [41.7, 714.0], [41.8, 714.0], [41.9, 714.0], [42.0, 734.0], [42.1, 734.0], [42.2, 734.0], [42.3, 734.0], [42.4, 734.0], [42.5, 734.0], [42.6, 734.0], [42.7, 741.0], [42.8, 741.0], [42.9, 741.0], [43.0, 741.0], [43.1, 741.0], [43.2, 741.0], [43.3, 741.0], [43.4, 747.0], [43.5, 747.0], [43.6, 747.0], [43.7, 747.0], [43.8, 747.0], [43.9, 747.0], [44.0, 747.0], [44.1, 747.0], [44.2, 747.0], [44.3, 747.0], [44.4, 747.0], [44.5, 747.0], [44.6, 747.0], [44.7, 747.0], [44.8, 747.0], [44.9, 747.0], [45.0, 747.0], [45.1, 747.0], [45.2, 747.0], [45.3, 747.0], [45.4, 747.0], [45.5, 773.0], [45.6, 773.0], [45.7, 773.0], [45.8, 773.0], [45.9, 773.0], [46.0, 773.0], [46.1, 773.0], [46.2, 817.0], [46.3, 817.0], [46.4, 817.0], [46.5, 817.0], [46.6, 817.0], [46.7, 817.0], [46.8, 817.0], [46.9, 827.0], [47.0, 827.0], [47.1, 827.0], [47.2, 827.0], [47.3, 827.0], [47.4, 827.0], [47.5, 827.0], [47.6, 828.0], [47.7, 828.0], [47.8, 828.0], [47.9, 828.0], [48.0, 828.0], [48.1, 828.0], [48.2, 828.0], [48.3, 849.0], [48.4, 849.0], [48.5, 849.0], [48.6, 849.0], [48.7, 849.0], [48.8, 849.0], [48.9, 849.0], [49.0, 871.0], [49.1, 871.0], [49.2, 871.0], [49.3, 871.0], [49.4, 871.0], [49.5, 871.0], [49.6, 871.0], [49.7, 871.0], [49.8, 871.0], [49.9, 871.0], [50.0, 871.0], [50.1, 871.0], [50.2, 871.0], [50.3, 871.0], [50.4, 934.0], [50.5, 934.0], [50.6, 934.0], [50.7, 934.0], [50.8, 934.0], [50.9, 934.0], [51.0, 934.0], [51.1, 935.0], [51.2, 935.0], [51.3, 935.0], [51.4, 935.0], [51.5, 935.0], [51.6, 935.0], [51.7, 935.0], [51.8, 942.0], [51.9, 942.0], [52.0, 942.0], [52.1, 942.0], [52.2, 942.0], [52.3, 942.0], [52.4, 942.0], [52.5, 1000.0], [52.6, 1000.0], [52.7, 1000.0], [52.8, 1000.0], [52.9, 1000.0], [53.0, 1000.0], [53.1, 1000.0], [53.2, 1012.0], [53.3, 1012.0], [53.4, 1012.0], [53.5, 1012.0], [53.6, 1012.0], [53.7, 1012.0], [53.8, 1012.0], [53.9, 1031.0], [54.0, 1031.0], [54.1, 1031.0], [54.2, 1031.0], [54.3, 1031.0], [54.4, 1031.0], [54.5, 1031.0], [54.6, 1032.0], [54.7, 1032.0], [54.8, 1032.0], [54.9, 1032.0], [55.0, 1032.0], [55.1, 1032.0], [55.2, 1032.0], [55.3, 1032.0], [55.4, 1032.0], [55.5, 1032.0], [55.6, 1032.0], [55.7, 1032.0], [55.8, 1032.0], [55.9, 1032.0], [56.0, 1033.0], [56.1, 1033.0], [56.2, 1033.0], [56.3, 1033.0], [56.4, 1033.0], [56.5, 1033.0], [56.6, 1033.0], [56.7, 1038.0], [56.8, 1038.0], [56.9, 1038.0], [57.0, 1038.0], [57.1, 1038.0], [57.2, 1038.0], [57.3, 1038.0], [57.4, 1045.0], [57.5, 1045.0], [57.6, 1045.0], [57.7, 1045.0], [57.8, 1045.0], [57.9, 1045.0], [58.0, 1045.0], [58.1, 1059.0], [58.2, 1059.0], [58.3, 1059.0], [58.4, 1059.0], [58.5, 1059.0], [58.6, 1059.0], [58.7, 1059.0], [58.8, 1093.0], [58.9, 1093.0], [59.0, 1093.0], [59.1, 1093.0], [59.2, 1093.0], [59.3, 1093.0], [59.4, 1093.0], [59.5, 1154.0], [59.6, 1154.0], [59.7, 1154.0], [59.8, 1154.0], [59.9, 1154.0], [60.0, 1154.0], [60.1, 1154.0], [60.2, 1158.0], [60.3, 1158.0], [60.4, 1158.0], [60.5, 1158.0], [60.6, 1158.0], [60.7, 1158.0], [60.8, 1158.0], [60.9, 1159.0], [61.0, 1159.0], [61.1, 1159.0], [61.2, 1159.0], [61.3, 1159.0], [61.4, 1159.0], [61.5, 1159.0], [61.6, 1167.0], [61.7, 1167.0], [61.8, 1167.0], [61.9, 1167.0], [62.0, 1167.0], [62.1, 1167.0], [62.2, 1167.0], [62.3, 1174.0], [62.4, 1174.0], [62.5, 1174.0], [62.6, 1174.0], [62.7, 1174.0], [62.8, 1174.0], [62.9, 1174.0], [63.0, 1183.0], [63.1, 1183.0], [63.2, 1183.0], [63.3, 1183.0], [63.4, 1183.0], [63.5, 1183.0], [63.6, 1183.0], [63.7, 1197.0], [63.8, 1197.0], [63.9, 1197.0], [64.0, 1197.0], [64.1, 1197.0], [64.2, 1197.0], [64.3, 1197.0], [64.4, 1221.0], [64.5, 1221.0], [64.6, 1221.0], [64.7, 1221.0], [64.8, 1221.0], [64.9, 1221.0], [65.0, 1221.0], [65.1, 1227.0], [65.2, 1227.0], [65.3, 1227.0], [65.4, 1227.0], [65.5, 1227.0], [65.6, 1227.0], [65.7, 1227.0], [65.8, 1240.0], [65.9, 1240.0], [66.0, 1240.0], [66.1, 1240.0], [66.2, 1240.0], [66.3, 1240.0], [66.4, 1240.0], [66.5, 1275.0], [66.6, 1275.0], [66.7, 1275.0], [66.8, 1275.0], [66.9, 1275.0], [67.0, 1275.0], [67.1, 1275.0], [67.2, 1303.0], [67.3, 1303.0], [67.4, 1303.0], [67.5, 1303.0], [67.6, 1303.0], [67.7, 1303.0], [67.8, 1303.0], [67.9, 1312.0], [68.0, 1312.0], [68.1, 1312.0], [68.2, 1312.0], [68.3, 1312.0], [68.4, 1312.0], [68.5, 1312.0], [68.6, 1321.0], [68.7, 1321.0], [68.8, 1321.0], [68.9, 1321.0], [69.0, 1321.0], [69.1, 1321.0], [69.2, 1321.0], [69.3, 1323.0], [69.4, 1323.0], [69.5, 1323.0], [69.6, 1323.0], [69.7, 1323.0], [69.8, 1323.0], [69.9, 1323.0], [70.0, 1339.0], [70.1, 1339.0], [70.2, 1339.0], [70.3, 1339.0], [70.4, 1339.0], [70.5, 1339.0], [70.6, 1339.0], [70.7, 1396.0], [70.8, 1396.0], [70.9, 1396.0], [71.0, 1396.0], [71.1, 1396.0], [71.2, 1396.0], [71.3, 1396.0], [71.4, 1397.0], [71.5, 1397.0], [71.6, 1397.0], [71.7, 1397.0], [71.8, 1397.0], [71.9, 1397.0], [72.0, 1397.0], [72.1, 1401.0], [72.2, 1401.0], [72.3, 1401.0], [72.4, 1401.0], [72.5, 1401.0], [72.6, 1401.0], [72.7, 1401.0], [72.8, 1401.0], [72.9, 1401.0], [73.0, 1401.0], [73.1, 1401.0], [73.2, 1401.0], [73.3, 1401.0], [73.4, 1401.0], [73.5, 1424.0], [73.6, 1424.0], [73.7, 1424.0], [73.8, 1424.0], [73.9, 1424.0], [74.0, 1424.0], [74.1, 1424.0], [74.2, 1429.0], [74.3, 1429.0], [74.4, 1429.0], [74.5, 1429.0], [74.6, 1429.0], [74.7, 1429.0], [74.8, 1429.0], [74.9, 1434.0], [75.0, 1434.0], [75.1, 1434.0], [75.2, 1434.0], [75.3, 1434.0], [75.4, 1434.0], [75.5, 1434.0], [75.6, 1443.0], [75.7, 1443.0], [75.8, 1443.0], [75.9, 1443.0], [76.0, 1443.0], [76.1, 1443.0], [76.2, 1443.0], [76.3, 1469.0], [76.4, 1469.0], [76.5, 1469.0], [76.6, 1469.0], [76.7, 1469.0], [76.8, 1469.0], [76.9, 1469.0], [77.0, 1486.0], [77.1, 1486.0], [77.2, 1486.0], [77.3, 1486.0], [77.4, 1486.0], [77.5, 1486.0], [77.6, 1486.0], [77.7, 1554.0], [77.8, 1554.0], [77.9, 1554.0], [78.0, 1554.0], [78.1, 1554.0], [78.2, 1554.0], [78.3, 1554.0], [78.4, 1636.0], [78.5, 1636.0], [78.6, 1636.0], [78.7, 1636.0], [78.8, 1636.0], [78.9, 1636.0], [79.0, 1636.0], [79.1, 1724.0], [79.2, 1724.0], [79.3, 1724.0], [79.4, 1724.0], [79.5, 1724.0], [79.6, 1724.0], [79.7, 1724.0], [79.8, 1750.0], [79.9, 1750.0], [80.0, 1750.0], [80.1, 1750.0], [80.2, 1750.0], [80.3, 1750.0], [80.4, 1750.0], [80.5, 1945.0], [80.6, 1945.0], [80.7, 1945.0], [80.8, 1945.0], [80.9, 1945.0], [81.0, 1945.0], [81.1, 1945.0], [81.2, 1965.0], [81.3, 1965.0], [81.4, 1965.0], [81.5, 1965.0], [81.6, 1965.0], [81.7, 1965.0], [81.8, 1965.0], [81.9, 1978.0], [82.0, 1978.0], [82.1, 1978.0], [82.2, 1978.0], [82.3, 1978.0], [82.4, 1978.0], [82.5, 1978.0], [82.6, 2017.0], [82.7, 2017.0], [82.8, 2017.0], [82.9, 2017.0], [83.0, 2017.0], [83.1, 2017.0], [83.2, 2017.0], [83.3, 2044.0], [83.4, 2044.0], [83.5, 2044.0], [83.6, 2044.0], [83.7, 2044.0], [83.8, 2044.0], [83.9, 2044.0], [84.0, 2108.0], [84.1, 2108.0], [84.2, 2108.0], [84.3, 2108.0], [84.4, 2108.0], [84.5, 2108.0], [84.6, 2108.0], [84.7, 2116.0], [84.8, 2116.0], [84.9, 2116.0], [85.0, 2116.0], [85.1, 2116.0], [85.2, 2116.0], [85.3, 2116.0], [85.4, 2136.0], [85.5, 2136.0], [85.6, 2136.0], [85.7, 2136.0], [85.8, 2136.0], [85.9, 2136.0], [86.0, 2136.0], [86.1, 2137.0], [86.2, 2137.0], [86.3, 2137.0], [86.4, 2137.0], [86.5, 2137.0], [86.6, 2137.0], [86.7, 2137.0], [86.8, 2241.0], [86.9, 2241.0], [87.0, 2241.0], [87.1, 2241.0], [87.2, 2241.0], [87.3, 2241.0], [87.4, 2241.0], [87.5, 2365.0], [87.6, 2365.0], [87.7, 2365.0], [87.8, 2365.0], [87.9, 2365.0], [88.0, 2365.0], [88.1, 2365.0], [88.2, 2366.0], [88.3, 2366.0], [88.4, 2366.0], [88.5, 2366.0], [88.6, 2366.0], [88.7, 2366.0], [88.8, 2366.0], [88.9, 2376.0], [89.0, 2376.0], [89.1, 2376.0], [89.2, 2376.0], [89.3, 2376.0], [89.4, 2376.0], [89.5, 2376.0], [89.6, 2389.0], [89.7, 2389.0], [89.8, 2389.0], [89.9, 2389.0], [90.0, 2389.0], [90.1, 2389.0], [90.2, 2389.0], [90.3, 2433.0], [90.4, 2433.0], [90.5, 2433.0], [90.6, 2433.0], [90.7, 2433.0], [90.8, 2433.0], [90.9, 2433.0], [91.0, 2559.0], [91.1, 2559.0], [91.2, 2559.0], [91.3, 2559.0], [91.4, 2559.0], [91.5, 2559.0], [91.6, 2559.0], [91.7, 2565.0], [91.8, 2565.0], [91.9, 2565.0], [92.0, 2565.0], [92.1, 2565.0], [92.2, 2565.0], [92.3, 2565.0], [92.4, 2594.0], [92.5, 2594.0], [92.6, 2594.0], [92.7, 2594.0], [92.8, 2594.0], [92.9, 2594.0], [93.0, 2594.0], [93.1, 2748.0], [93.2, 2748.0], [93.3, 2748.0], [93.4, 2748.0], [93.5, 2748.0], [93.6, 2748.0], [93.7, 2748.0], [93.8, 2761.0], [93.9, 2761.0], [94.0, 2761.0], [94.1, 2761.0], [94.2, 2761.0], [94.3, 2761.0], [94.4, 2761.0], [94.5, 2882.0], [94.6, 2882.0], [94.7, 2882.0], [94.8, 2882.0], [94.9, 2882.0], [95.0, 2882.0], [95.1, 2882.0], [95.2, 2966.0], [95.3, 2966.0], [95.4, 2966.0], [95.5, 2966.0], [95.6, 2966.0], [95.7, 2966.0], [95.8, 2966.0], [95.9, 2968.0], [96.0, 2968.0], [96.1, 2968.0], [96.2, 2968.0], [96.3, 2968.0], [96.4, 2968.0], [96.5, 2968.0], [96.6, 2972.0], [96.7, 2972.0], [96.8, 2972.0], [96.9, 2972.0], [97.0, 2972.0], [97.1, 2972.0], [97.2, 2972.0], [97.3, 3244.0], [97.4, 3244.0], [97.5, 3244.0], [97.6, 3244.0], [97.7, 3244.0], [97.8, 3244.0], [97.9, 3244.0], [98.0, 3272.0], [98.1, 3272.0], [98.2, 3272.0], [98.3, 3272.0], [98.4, 3272.0], [98.5, 3272.0], [98.6, 3272.0], [98.7, 3610.0], [98.8, 3610.0], [98.9, 3610.0], [99.0, 3610.0], [99.1, 3610.0], [99.2, 3610.0], [99.3, 3610.0], [99.4, 5947.0], [99.5, 5947.0], [99.6, 5947.0], [99.7, 5947.0], [99.8, 5947.0], [99.9, 5947.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[0.0, 416.0], [0.1, 416.0], [0.2, 416.0], [0.3, 416.0], [0.4, 416.0], [0.5, 416.0], [0.6, 416.0], [0.7, 418.0], [0.8, 418.0], [0.9, 418.0], [1.0, 418.0], [1.1, 418.0], [1.2, 418.0], [1.3, 418.0], [1.4, 419.0], [1.5, 419.0], [1.6, 419.0], [1.7, 419.0], [1.8, 419.0], [1.9, 419.0], [2.0, 419.0], [2.1, 419.0], [2.2, 419.0], [2.3, 419.0], [2.4, 419.0], [2.5, 419.0], [2.6, 419.0], [2.7, 419.0], [2.8, 419.0], [2.9, 419.0], [3.0, 419.0], [3.1, 419.0], [3.2, 419.0], [3.3, 420.0], [3.4, 420.0], [3.5, 420.0], [3.6, 420.0], [3.7, 420.0], [3.8, 420.0], [3.9, 420.0], [4.0, 421.0], [4.1, 421.0], [4.2, 421.0], [4.3, 421.0], [4.4, 421.0], [4.5, 421.0], [4.6, 421.0], [4.7, 421.0], [4.8, 421.0], [4.9, 421.0], [5.0, 421.0], [5.1, 421.0], [5.2, 421.0], [5.3, 422.0], [5.4, 422.0], [5.5, 422.0], [5.6, 422.0], [5.7, 422.0], [5.8, 422.0], [5.9, 422.0], [6.0, 422.0], [6.1, 422.0], [6.2, 422.0], [6.3, 422.0], [6.4, 422.0], [6.5, 422.0], [6.6, 423.0], [6.7, 423.0], [6.8, 423.0], [6.9, 423.0], [7.0, 423.0], [7.1, 423.0], [7.2, 423.0], [7.3, 423.0], [7.4, 423.0], [7.5, 423.0], [7.6, 423.0], [7.7, 423.0], [7.8, 423.0], [7.9, 424.0], [8.0, 424.0], [8.1, 424.0], [8.2, 424.0], [8.3, 424.0], [8.4, 424.0], [8.5, 424.0], [8.6, 424.0], [8.7, 424.0], [8.8, 424.0], [8.9, 424.0], [9.0, 424.0], [9.1, 424.0], [9.2, 424.0], [9.3, 424.0], [9.4, 424.0], [9.5, 424.0], [9.6, 424.0], [9.7, 424.0], [9.8, 424.0], [9.9, 424.0], [10.0, 424.0], [10.1, 424.0], [10.2, 424.0], [10.3, 424.0], [10.4, 424.0], [10.5, 424.0], [10.6, 424.0], [10.7, 424.0], [10.8, 424.0], [10.9, 424.0], [11.0, 424.0], [11.1, 424.0], [11.2, 425.0], [11.3, 425.0], [11.4, 425.0], [11.5, 425.0], [11.6, 425.0], [11.7, 425.0], [11.8, 425.0], [11.9, 425.0], [12.0, 425.0], [12.1, 425.0], [12.2, 425.0], [12.3, 425.0], [12.4, 425.0], [12.5, 426.0], [12.6, 426.0], [12.7, 426.0], [12.8, 426.0], [12.9, 426.0], [13.0, 426.0], [13.1, 429.0], [13.2, 429.0], [13.3, 429.0], [13.4, 429.0], [13.5, 429.0], [13.6, 429.0], [13.7, 429.0], [13.8, 436.0], [13.9, 436.0], [14.0, 436.0], [14.1, 436.0], [14.2, 436.0], [14.3, 436.0], [14.4, 437.0], [14.5, 437.0], [14.6, 437.0], [14.7, 437.0], [14.8, 437.0], [14.9, 437.0], [15.0, 437.0], [15.1, 439.0], [15.2, 439.0], [15.3, 439.0], [15.4, 439.0], [15.5, 439.0], [15.6, 439.0], [15.7, 446.0], [15.8, 446.0], [15.9, 446.0], [16.0, 446.0], [16.1, 446.0], [16.2, 446.0], [16.3, 446.0], [16.4, 459.0], [16.5, 459.0], [16.6, 459.0], [16.7, 459.0], [16.8, 459.0], [16.9, 459.0], [17.0, 463.0], [17.1, 463.0], [17.2, 463.0], [17.3, 463.0], [17.4, 463.0], [17.5, 463.0], [17.6, 463.0], [17.7, 467.0], [17.8, 467.0], [17.9, 467.0], [18.0, 467.0], [18.1, 467.0], [18.2, 467.0], [18.3, 467.0], [18.4, 469.0], [18.5, 469.0], [18.6, 469.0], [18.7, 469.0], [18.8, 469.0], [18.9, 469.0], [19.0, 471.0], [19.1, 471.0], [19.2, 471.0], [19.3, 471.0], [19.4, 471.0], [19.5, 471.0], [19.6, 471.0], [19.7, 485.0], [19.8, 485.0], [19.9, 485.0], [20.0, 485.0], [20.1, 485.0], [20.2, 485.0], [20.3, 492.0], [20.4, 492.0], [20.5, 492.0], [20.6, 492.0], [20.7, 492.0], [20.8, 492.0], [20.9, 492.0], [21.0, 505.0], [21.1, 505.0], [21.2, 505.0], [21.3, 505.0], [21.4, 505.0], [21.5, 505.0], [21.6, 507.0], [21.7, 507.0], [21.8, 507.0], [21.9, 507.0], [22.0, 507.0], [22.1, 507.0], [22.2, 507.0], [22.3, 516.0], [22.4, 516.0], [22.5, 516.0], [22.6, 516.0], [22.7, 516.0], [22.8, 516.0], [22.9, 531.0], [23.0, 531.0], [23.1, 531.0], [23.2, 531.0], [23.3, 531.0], [23.4, 531.0], [23.5, 531.0], [23.6, 548.0], [23.7, 548.0], [23.8, 548.0], [23.9, 548.0], [24.0, 548.0], [24.1, 548.0], [24.2, 555.0], [24.3, 555.0], [24.4, 555.0], [24.5, 555.0], [24.6, 555.0], [24.7, 555.0], [24.8, 555.0], [24.9, 556.0], [25.0, 556.0], [25.1, 556.0], [25.2, 556.0], [25.3, 556.0], [25.4, 556.0], [25.5, 569.0], [25.6, 569.0], [25.7, 569.0], [25.8, 569.0], [25.9, 569.0], [26.0, 569.0], [26.1, 569.0], [26.2, 579.0], [26.3, 579.0], [26.4, 579.0], [26.5, 579.0], [26.6, 579.0], [26.7, 579.0], [26.8, 615.0], [26.9, 615.0], [27.0, 615.0], [27.1, 615.0], [27.2, 615.0], [27.3, 615.0], [27.4, 615.0], [27.5, 634.0], [27.6, 634.0], [27.7, 634.0], [27.8, 634.0], [27.9, 634.0], [28.0, 634.0], [28.1, 634.0], [28.2, 650.0], [28.3, 650.0], [28.4, 650.0], [28.5, 650.0], [28.6, 650.0], [28.7, 650.0], [28.8, 677.0], [28.9, 677.0], [29.0, 677.0], [29.1, 677.0], [29.2, 677.0], [29.3, 677.0], [29.4, 677.0], [29.5, 683.0], [29.6, 683.0], [29.7, 683.0], [29.8, 683.0], [29.9, 683.0], [30.0, 683.0], [30.1, 693.0], [30.2, 693.0], [30.3, 693.0], [30.4, 693.0], [30.5, 693.0], [30.6, 693.0], [30.7, 693.0], [30.8, 695.0], [30.9, 695.0], [31.0, 695.0], [31.1, 695.0], [31.2, 695.0], [31.3, 695.0], [31.4, 695.0], [31.5, 695.0], [31.6, 695.0], [31.7, 695.0], [31.8, 695.0], [31.9, 695.0], [32.0, 695.0], [32.1, 695.0], [32.2, 695.0], [32.3, 695.0], [32.4, 695.0], [32.5, 695.0], [32.6, 695.0], [32.7, 707.0], [32.8, 707.0], [32.9, 707.0], [33.0, 707.0], [33.1, 707.0], [33.2, 707.0], [33.3, 707.0], [33.4, 726.0], [33.5, 726.0], [33.6, 726.0], [33.7, 726.0], [33.8, 726.0], [33.9, 726.0], [34.0, 726.0], [34.1, 726.0], [34.2, 726.0], [34.3, 726.0], [34.4, 726.0], [34.5, 726.0], [34.6, 726.0], [34.7, 737.0], [34.8, 737.0], [34.9, 737.0], [35.0, 737.0], [35.1, 737.0], [35.2, 737.0], [35.3, 738.0], [35.4, 738.0], [35.5, 738.0], [35.6, 738.0], [35.7, 738.0], [35.8, 738.0], [35.9, 738.0], [36.0, 758.0], [36.1, 758.0], [36.2, 758.0], [36.3, 758.0], [36.4, 758.0], [36.5, 758.0], [36.6, 758.0], [36.7, 760.0], [36.8, 760.0], [36.9, 760.0], [37.0, 760.0], [37.1, 760.0], [37.2, 760.0], [37.3, 770.0], [37.4, 770.0], [37.5, 770.0], [37.6, 770.0], [37.7, 770.0], [37.8, 770.0], [37.9, 770.0], [38.0, 781.0], [38.1, 781.0], [38.2, 781.0], [38.3, 781.0], [38.4, 781.0], [38.5, 781.0], [38.6, 801.0], [38.7, 801.0], [38.8, 801.0], [38.9, 801.0], [39.0, 801.0], [39.1, 801.0], [39.2, 801.0], [39.3, 802.0], [39.4, 802.0], [39.5, 802.0], [39.6, 802.0], [39.7, 802.0], [39.8, 802.0], [39.9, 818.0], [40.0, 818.0], [40.1, 818.0], [40.2, 818.0], [40.3, 818.0], [40.4, 818.0], [40.5, 818.0], [40.6, 830.0], [40.7, 830.0], [40.8, 830.0], [40.9, 830.0], [41.0, 830.0], [41.1, 830.0], [41.2, 831.0], [41.3, 831.0], [41.4, 831.0], [41.5, 831.0], [41.6, 831.0], [41.7, 831.0], [41.8, 831.0], [41.9, 834.0], [42.0, 834.0], [42.1, 834.0], [42.2, 834.0], [42.3, 834.0], [42.4, 834.0], [42.5, 835.0], [42.6, 835.0], [42.7, 835.0], [42.8, 835.0], [42.9, 835.0], [43.0, 835.0], [43.1, 835.0], [43.2, 851.0], [43.3, 851.0], [43.4, 851.0], [43.5, 851.0], [43.6, 851.0], [43.7, 851.0], [43.8, 853.0], [43.9, 853.0], [44.0, 853.0], [44.1, 853.0], [44.2, 853.0], [44.3, 853.0], [44.4, 853.0], [44.5, 863.0], [44.6, 863.0], [44.7, 863.0], [44.8, 863.0], [44.9, 863.0], [45.0, 863.0], [45.1, 888.0], [45.2, 888.0], [45.3, 888.0], [45.4, 888.0], [45.5, 888.0], [45.6, 888.0], [45.7, 888.0], [45.8, 893.0], [45.9, 893.0], [46.0, 893.0], [46.1, 893.0], [46.2, 893.0], [46.3, 893.0], [46.4, 893.0], [46.5, 895.0], [46.6, 895.0], [46.7, 895.0], [46.8, 895.0], [46.9, 895.0], [47.0, 895.0], [47.1, 932.0], [47.2, 932.0], [47.3, 932.0], [47.4, 932.0], [47.5, 932.0], [47.6, 932.0], [47.7, 932.0], [47.8, 934.0], [47.9, 934.0], [48.0, 934.0], [48.1, 934.0], [48.2, 934.0], [48.3, 934.0], [48.4, 984.0], [48.5, 984.0], [48.6, 984.0], [48.7, 984.0], [48.8, 984.0], [48.9, 984.0], [49.0, 984.0], [49.1, 987.0], [49.2, 987.0], [49.3, 987.0], [49.4, 987.0], [49.5, 987.0], [49.6, 987.0], [49.7, 991.0], [49.8, 991.0], [49.9, 991.0], [50.0, 991.0], [50.1, 991.0], [50.2, 991.0], [50.3, 991.0], [50.4, 997.0], [50.5, 997.0], [50.6, 997.0], [50.7, 997.0], [50.8, 997.0], [50.9, 997.0], [51.0, 1036.0], [51.1, 1036.0], [51.2, 1036.0], [51.3, 1036.0], [51.4, 1036.0], [51.5, 1036.0], [51.6, 1036.0], [51.7, 1058.0], [51.8, 1058.0], [51.9, 1058.0], [52.0, 1058.0], [52.1, 1058.0], [52.2, 1058.0], [52.3, 1062.0], [52.4, 1062.0], [52.5, 1062.0], [52.6, 1062.0], [52.7, 1062.0], [52.8, 1062.0], [52.9, 1062.0], [53.0, 1062.0], [53.1, 1062.0], [53.2, 1062.0], [53.3, 1062.0], [53.4, 1062.0], [53.5, 1062.0], [53.6, 1063.0], [53.7, 1063.0], [53.8, 1063.0], [53.9, 1063.0], [54.0, 1063.0], [54.1, 1063.0], [54.2, 1063.0], [54.3, 1081.0], [54.4, 1081.0], [54.5, 1081.0], [54.6, 1081.0], [54.7, 1081.0], [54.8, 1081.0], [54.9, 1081.0], [55.0, 1095.0], [55.1, 1095.0], [55.2, 1095.0], [55.3, 1095.0], [55.4, 1095.0], [55.5, 1095.0], [55.6, 1102.0], [55.7, 1102.0], [55.8, 1102.0], [55.9, 1102.0], [56.0, 1102.0], [56.1, 1102.0], [56.2, 1102.0], [56.3, 1113.0], [56.4, 1113.0], [56.5, 1113.0], [56.6, 1113.0], [56.7, 1113.0], [56.8, 1113.0], [56.9, 1114.0], [57.0, 1114.0], [57.1, 1114.0], [57.2, 1114.0], [57.3, 1114.0], [57.4, 1114.0], [57.5, 1114.0], [57.6, 1157.0], [57.7, 1157.0], [57.8, 1157.0], [57.9, 1157.0], [58.0, 1157.0], [58.1, 1157.0], [58.2, 1162.0], [58.3, 1162.0], [58.4, 1162.0], [58.5, 1162.0], [58.6, 1162.0], [58.7, 1162.0], [58.8, 1162.0], [58.9, 1179.0], [59.0, 1179.0], [59.1, 1179.0], [59.2, 1179.0], [59.3, 1179.0], [59.4, 1179.0], [59.5, 1192.0], [59.6, 1192.0], [59.7, 1192.0], [59.8, 1192.0], [59.9, 1192.0], [60.0, 1192.0], [60.1, 1192.0], [60.2, 1203.0], [60.3, 1203.0], [60.4, 1203.0], [60.5, 1203.0], [60.6, 1203.0], [60.7, 1203.0], [60.8, 1235.0], [60.9, 1235.0], [61.0, 1235.0], [61.1, 1235.0], [61.2, 1235.0], [61.3, 1235.0], [61.4, 1235.0], [61.5, 1237.0], [61.6, 1237.0], [61.7, 1237.0], [61.8, 1237.0], [61.9, 1237.0], [62.0, 1237.0], [62.1, 1245.0], [62.2, 1245.0], [62.3, 1245.0], [62.4, 1245.0], [62.5, 1245.0], [62.6, 1245.0], [62.7, 1245.0], [62.8, 1246.0], [62.9, 1246.0], [63.0, 1246.0], [63.1, 1246.0], [63.2, 1246.0], [63.3, 1246.0], [63.4, 1249.0], [63.5, 1249.0], [63.6, 1249.0], [63.7, 1249.0], [63.8, 1249.0], [63.9, 1249.0], [64.0, 1249.0], [64.1, 1261.0], [64.2, 1261.0], [64.3, 1261.0], [64.4, 1261.0], [64.5, 1261.0], [64.6, 1261.0], [64.7, 1261.0], [64.8, 1305.0], [64.9, 1305.0], [65.0, 1305.0], [65.1, 1305.0], [65.2, 1305.0], [65.3, 1305.0], [65.4, 1305.0], [65.5, 1305.0], [65.6, 1305.0], [65.7, 1305.0], [65.8, 1305.0], [65.9, 1305.0], [66.0, 1305.0], [66.1, 1356.0], [66.2, 1356.0], [66.3, 1356.0], [66.4, 1356.0], [66.5, 1356.0], [66.6, 1356.0], [66.7, 1357.0], [66.8, 1357.0], [66.9, 1357.0], [67.0, 1357.0], [67.1, 1357.0], [67.2, 1357.0], [67.3, 1357.0], [67.4, 1379.0], [67.5, 1379.0], [67.6, 1379.0], [67.7, 1379.0], [67.8, 1379.0], [67.9, 1379.0], [68.0, 1389.0], [68.1, 1389.0], [68.2, 1389.0], [68.3, 1389.0], [68.4, 1389.0], [68.5, 1389.0], [68.6, 1389.0], [68.7, 1399.0], [68.8, 1399.0], [68.9, 1399.0], [69.0, 1399.0], [69.1, 1399.0], [69.2, 1399.0], [69.3, 1451.0], [69.4, 1451.0], [69.5, 1451.0], [69.6, 1451.0], [69.7, 1451.0], [69.8, 1451.0], [69.9, 1451.0], [70.0, 1473.0], [70.1, 1473.0], [70.2, 1473.0], [70.3, 1473.0], [70.4, 1473.0], [70.5, 1473.0], [70.6, 1480.0], [70.7, 1480.0], [70.8, 1480.0], [70.9, 1480.0], [71.0, 1480.0], [71.1, 1480.0], [71.2, 1480.0], [71.3, 1514.0], [71.4, 1514.0], [71.5, 1514.0], [71.6, 1514.0], [71.7, 1514.0], [71.8, 1514.0], [71.9, 1524.0], [72.0, 1524.0], [72.1, 1524.0], [72.2, 1524.0], [72.3, 1524.0], [72.4, 1524.0], [72.5, 1524.0], [72.6, 1533.0], [72.7, 1533.0], [72.8, 1533.0], [72.9, 1533.0], [73.0, 1533.0], [73.1, 1533.0], [73.2, 1533.0], [73.3, 1596.0], [73.4, 1596.0], [73.5, 1596.0], [73.6, 1596.0], [73.7, 1596.0], [73.8, 1596.0], [73.9, 1646.0], [74.0, 1646.0], [74.1, 1646.0], [74.2, 1646.0], [74.3, 1646.0], [74.4, 1646.0], [74.5, 1646.0], [74.6, 1676.0], [74.7, 1676.0], [74.8, 1676.0], [74.9, 1676.0], [75.0, 1676.0], [75.1, 1676.0], [75.2, 1714.0], [75.3, 1714.0], [75.4, 1714.0], [75.5, 1714.0], [75.6, 1714.0], [75.7, 1714.0], [75.8, 1714.0], [75.9, 1732.0], [76.0, 1732.0], [76.1, 1732.0], [76.2, 1732.0], [76.3, 1732.0], [76.4, 1732.0], [76.5, 1739.0], [76.6, 1739.0], [76.7, 1739.0], [76.8, 1739.0], [76.9, 1739.0], [77.0, 1739.0], [77.1, 1739.0], [77.2, 1765.0], [77.3, 1765.0], [77.4, 1765.0], [77.5, 1765.0], [77.6, 1765.0], [77.7, 1765.0], [77.8, 1772.0], [77.9, 1772.0], [78.0, 1772.0], [78.1, 1772.0], [78.2, 1772.0], [78.3, 1772.0], [78.4, 1772.0], [78.5, 1778.0], [78.6, 1778.0], [78.7, 1778.0], [78.8, 1778.0], [78.9, 1778.0], [79.0, 1778.0], [79.1, 1788.0], [79.2, 1788.0], [79.3, 1788.0], [79.4, 1788.0], [79.5, 1788.0], [79.6, 1788.0], [79.7, 1788.0], [79.8, 1805.0], [79.9, 1805.0], [80.0, 1805.0], [80.1, 1805.0], [80.2, 1805.0], [80.3, 1805.0], [80.4, 1819.0], [80.5, 1819.0], [80.6, 1819.0], [80.7, 1819.0], [80.8, 1819.0], [80.9, 1819.0], [81.0, 1819.0], [81.1, 1828.0], [81.2, 1828.0], [81.3, 1828.0], [81.4, 1828.0], [81.5, 1828.0], [81.6, 1828.0], [81.7, 1916.0], [81.8, 1916.0], [81.9, 1916.0], [82.0, 1916.0], [82.1, 1916.0], [82.2, 1916.0], [82.3, 1916.0], [82.4, 1949.0], [82.5, 1949.0], [82.6, 1949.0], [82.7, 1949.0], [82.8, 1949.0], [82.9, 1949.0], [83.0, 1949.0], [83.1, 1952.0], [83.2, 1952.0], [83.3, 1952.0], [83.4, 1952.0], [83.5, 1952.0], [83.6, 1952.0], [83.7, 1971.0], [83.8, 1971.0], [83.9, 1971.0], [84.0, 1971.0], [84.1, 1971.0], [84.2, 1971.0], [84.3, 1971.0], [84.4, 1971.0], [84.5, 1971.0], [84.6, 1971.0], [84.7, 1971.0], [84.8, 1971.0], [84.9, 1971.0], [85.0, 1972.0], [85.1, 1972.0], [85.2, 1972.0], [85.3, 1972.0], [85.4, 1972.0], [85.5, 1972.0], [85.6, 1972.0], [85.7, 1981.0], [85.8, 1981.0], [85.9, 1981.0], [86.0, 1981.0], [86.1, 1981.0], [86.2, 1981.0], [86.3, 2024.0], [86.4, 2024.0], [86.5, 2024.0], [86.6, 2024.0], [86.7, 2024.0], [86.8, 2024.0], [86.9, 2024.0], [87.0, 2037.0], [87.1, 2037.0], [87.2, 2037.0], [87.3, 2037.0], [87.4, 2037.0], [87.5, 2037.0], [87.6, 2065.0], [87.7, 2065.0], [87.8, 2065.0], [87.9, 2065.0], [88.0, 2065.0], [88.1, 2065.0], [88.2, 2065.0], [88.3, 2085.0], [88.4, 2085.0], [88.5, 2085.0], [88.6, 2085.0], [88.7, 2085.0], [88.8, 2085.0], [88.9, 2109.0], [89.0, 2109.0], [89.1, 2109.0], [89.2, 2109.0], [89.3, 2109.0], [89.4, 2109.0], [89.5, 2109.0], [89.6, 2117.0], [89.7, 2117.0], [89.8, 2117.0], [89.9, 2117.0], [90.0, 2117.0], [90.1, 2117.0], [90.2, 2122.0], [90.3, 2122.0], [90.4, 2122.0], [90.5, 2122.0], [90.6, 2122.0], [90.7, 2122.0], [90.8, 2122.0], [90.9, 2190.0], [91.0, 2190.0], [91.1, 2190.0], [91.2, 2190.0], [91.3, 2190.0], [91.4, 2190.0], [91.5, 2190.0], [91.6, 2195.0], [91.7, 2195.0], [91.8, 2195.0], [91.9, 2195.0], [92.0, 2195.0], [92.1, 2195.0], [92.2, 2286.0], [92.3, 2286.0], [92.4, 2286.0], [92.5, 2286.0], [92.6, 2286.0], [92.7, 2286.0], [92.8, 2286.0], [92.9, 2299.0], [93.0, 2299.0], [93.1, 2299.0], [93.2, 2299.0], [93.3, 2299.0], [93.4, 2299.0], [93.5, 2368.0], [93.6, 2368.0], [93.7, 2368.0], [93.8, 2368.0], [93.9, 2368.0], [94.0, 2368.0], [94.1, 2368.0], [94.2, 2393.0], [94.3, 2393.0], [94.4, 2393.0], [94.5, 2393.0], [94.6, 2393.0], [94.7, 2393.0], [94.8, 2594.0], [94.9, 2594.0], [95.0, 2594.0], [95.1, 2594.0], [95.2, 2594.0], [95.3, 2594.0], [95.4, 2594.0], [95.5, 2712.0], [95.6, 2712.0], [95.7, 2712.0], [95.8, 2712.0], [95.9, 2712.0], [96.0, 2712.0], [96.1, 2926.0], [96.2, 2926.0], [96.3, 2926.0], [96.4, 2926.0], [96.5, 2926.0], [96.6, 2926.0], [96.7, 2926.0], [96.8, 3227.0], [96.9, 3227.0], [97.0, 3227.0], [97.1, 3227.0], [97.2, 3227.0], [97.3, 3227.0], [97.4, 3382.0], [97.5, 3382.0], [97.6, 3382.0], [97.7, 3382.0], [97.8, 3382.0], [97.9, 3382.0], [98.0, 3382.0], [98.1, 3438.0], [98.2, 3438.0], [98.3, 3438.0], [98.4, 3438.0], [98.5, 3438.0], [98.6, 3438.0], [98.7, 3487.0], [98.8, 3487.0], [98.9, 3487.0], [99.0, 3487.0], [99.1, 3487.0], [99.2, 3487.0], [99.3, 3487.0], [99.4, 3968.0], [99.5, 3968.0], [99.6, 3968.0], [99.7, 3968.0], [99.8, 3968.0], [99.9, 3968.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[0.0, 417.0], [0.1, 417.0], [0.2, 417.0], [0.3, 417.0], [0.4, 417.0], [0.5, 417.0], [0.6, 417.0], [0.7, 417.0], [0.8, 417.0], [0.9, 417.0], [1.0, 417.0], [1.1, 417.0], [1.2, 417.0], [1.3, 417.0], [1.4, 417.0], [1.5, 418.0], [1.6, 418.0], [1.7, 418.0], [1.8, 418.0], [1.9, 418.0], [2.0, 418.0], [2.1, 418.0], [2.2, 418.0], [2.3, 418.0], [2.4, 418.0], [2.5, 418.0], [2.6, 418.0], [2.7, 418.0], [2.8, 418.0], [2.9, 418.0], [3.0, 419.0], [3.1, 419.0], [3.2, 419.0], [3.3, 419.0], [3.4, 419.0], [3.5, 419.0], [3.6, 419.0], [3.7, 419.0], [3.8, 419.0], [3.9, 419.0], [4.0, 419.0], [4.1, 419.0], [4.2, 419.0], [4.3, 419.0], [4.4, 419.0], [4.5, 421.0], [4.6, 421.0], [4.7, 421.0], [4.8, 421.0], [4.9, 421.0], [5.0, 421.0], [5.1, 421.0], [5.2, 421.0], [5.3, 421.0], [5.4, 421.0], [5.5, 421.0], [5.6, 421.0], [5.7, 421.0], [5.8, 421.0], [5.9, 421.0], [6.0, 422.0], [6.1, 422.0], [6.2, 422.0], [6.3, 422.0], [6.4, 422.0], [6.5, 422.0], [6.6, 422.0], [6.7, 422.0], [6.8, 422.0], [6.9, 422.0], [7.0, 422.0], [7.1, 422.0], [7.2, 422.0], [7.3, 422.0], [7.4, 422.0], [7.5, 422.0], [7.6, 422.0], [7.7, 422.0], [7.8, 422.0], [7.9, 422.0], [8.0, 422.0], [8.1, 422.0], [8.2, 422.0], [8.3, 423.0], [8.4, 423.0], [8.5, 423.0], [8.6, 423.0], [8.7, 423.0], [8.8, 423.0], [8.9, 423.0], [9.0, 423.0], [9.1, 423.0], [9.2, 423.0], [9.3, 423.0], [9.4, 423.0], [9.5, 423.0], [9.6, 423.0], [9.7, 423.0], [9.8, 423.0], [9.9, 423.0], [10.0, 423.0], [10.1, 423.0], [10.2, 423.0], [10.3, 423.0], [10.4, 423.0], [10.5, 423.0], [10.6, 423.0], [10.7, 423.0], [10.8, 423.0], [10.9, 423.0], [11.0, 423.0], [11.1, 423.0], [11.2, 424.0], [11.3, 424.0], [11.4, 424.0], [11.5, 424.0], [11.6, 424.0], [11.7, 424.0], [11.8, 424.0], [11.9, 424.0], [12.0, 424.0], [12.1, 424.0], [12.2, 424.0], [12.3, 424.0], [12.4, 424.0], [12.5, 424.0], [12.6, 424.0], [12.7, 424.0], [12.8, 424.0], [12.9, 424.0], [13.0, 424.0], [13.1, 424.0], [13.2, 424.0], [13.3, 424.0], [13.4, 424.0], [13.5, 425.0], [13.6, 425.0], [13.7, 425.0], [13.8, 425.0], [13.9, 425.0], [14.0, 425.0], [14.1, 425.0], [14.2, 427.0], [14.3, 427.0], [14.4, 427.0], [14.5, 427.0], [14.6, 427.0], [14.7, 427.0], [14.8, 427.0], [14.9, 427.0], [15.0, 428.0], [15.1, 428.0], [15.2, 428.0], [15.3, 428.0], [15.4, 428.0], [15.5, 428.0], [15.6, 428.0], [15.7, 428.0], [15.8, 428.0], [15.9, 428.0], [16.0, 428.0], [16.1, 428.0], [16.2, 428.0], [16.3, 428.0], [16.4, 428.0], [16.5, 429.0], [16.6, 429.0], [16.7, 429.0], [16.8, 429.0], [16.9, 429.0], [17.0, 429.0], [17.1, 429.0], [17.2, 432.0], [17.3, 432.0], [17.4, 432.0], [17.5, 432.0], [17.6, 432.0], [17.7, 432.0], [17.8, 432.0], [17.9, 432.0], [18.0, 434.0], [18.1, 434.0], [18.2, 434.0], [18.3, 434.0], [18.4, 434.0], [18.5, 434.0], [18.6, 434.0], [18.7, 440.0], [18.8, 440.0], [18.9, 440.0], [19.0, 440.0], [19.1, 440.0], [19.2, 440.0], [19.3, 440.0], [19.4, 440.0], [19.5, 446.0], [19.6, 446.0], [19.7, 446.0], [19.8, 446.0], [19.9, 446.0], [20.0, 446.0], [20.1, 446.0], [20.2, 449.0], [20.3, 449.0], [20.4, 449.0], [20.5, 449.0], [20.6, 449.0], [20.7, 449.0], [20.8, 449.0], [20.9, 459.0], [21.0, 459.0], [21.1, 459.0], [21.2, 459.0], [21.3, 459.0], [21.4, 459.0], [21.5, 459.0], [21.6, 459.0], [21.7, 460.0], [21.8, 460.0], [21.9, 460.0], [22.0, 460.0], [22.1, 460.0], [22.2, 460.0], [22.3, 460.0], [22.4, 463.0], [22.5, 463.0], [22.6, 463.0], [22.7, 463.0], [22.8, 463.0], [22.9, 463.0], [23.0, 463.0], [23.1, 463.0], [23.2, 465.0], [23.3, 465.0], [23.4, 465.0], [23.5, 465.0], [23.6, 465.0], [23.7, 465.0], [23.8, 465.0], [23.9, 467.0], [24.0, 467.0], [24.1, 467.0], [24.2, 467.0], [24.3, 467.0], [24.4, 467.0], [24.5, 467.0], [24.6, 467.0], [24.7, 468.0], [24.8, 468.0], [24.9, 468.0], [25.0, 468.0], [25.1, 468.0], [25.2, 468.0], [25.3, 468.0], [25.4, 478.0], [25.5, 478.0], [25.6, 478.0], [25.7, 478.0], [25.8, 478.0], [25.9, 478.0], [26.0, 478.0], [26.1, 478.0], [26.2, 488.0], [26.3, 488.0], [26.4, 488.0], [26.5, 488.0], [26.6, 488.0], [26.7, 488.0], [26.8, 488.0], [26.9, 488.0], [27.0, 488.0], [27.1, 488.0], [27.2, 488.0], [27.3, 488.0], [27.4, 488.0], [27.5, 488.0], [27.6, 488.0], [27.7, 493.0], [27.8, 493.0], [27.9, 493.0], [28.0, 493.0], [28.1, 493.0], [28.2, 493.0], [28.3, 493.0], [28.4, 500.0], [28.5, 500.0], [28.6, 500.0], [28.7, 500.0], [28.8, 500.0], [28.9, 500.0], [29.0, 500.0], [29.1, 500.0], [29.2, 501.0], [29.3, 501.0], [29.4, 501.0], [29.5, 501.0], [29.6, 501.0], [29.7, 501.0], [29.8, 501.0], [29.9, 511.0], [30.0, 511.0], [30.1, 511.0], [30.2, 511.0], [30.3, 511.0], [30.4, 511.0], [30.5, 511.0], [30.6, 529.0], [30.7, 529.0], [30.8, 529.0], [30.9, 529.0], [31.0, 529.0], [31.1, 529.0], [31.2, 529.0], [31.3, 529.0], [31.4, 548.0], [31.5, 548.0], [31.6, 548.0], [31.7, 548.0], [31.8, 548.0], [31.9, 548.0], [32.0, 548.0], [32.1, 562.0], [32.2, 562.0], [32.3, 562.0], [32.4, 562.0], [32.5, 562.0], [32.6, 562.0], [32.7, 562.0], [32.8, 562.0], [32.9, 573.0], [33.0, 573.0], [33.1, 573.0], [33.2, 573.0], [33.3, 573.0], [33.4, 573.0], [33.5, 573.0], [33.6, 591.0], [33.7, 591.0], [33.8, 591.0], [33.9, 591.0], [34.0, 591.0], [34.1, 591.0], [34.2, 591.0], [34.3, 591.0], [34.4, 598.0], [34.5, 598.0], [34.6, 598.0], [34.7, 598.0], [34.8, 598.0], [34.9, 598.0], [35.0, 598.0], [35.1, 602.0], [35.2, 602.0], [35.3, 602.0], [35.4, 602.0], [35.5, 602.0], [35.6, 602.0], [35.7, 602.0], [35.8, 602.0], [35.9, 618.0], [36.0, 618.0], [36.1, 618.0], [36.2, 618.0], [36.3, 618.0], [36.4, 618.0], [36.5, 618.0], [36.6, 622.0], [36.7, 622.0], [36.8, 622.0], [36.9, 622.0], [37.0, 622.0], [37.1, 622.0], [37.2, 622.0], [37.3, 622.0], [37.4, 626.0], [37.5, 626.0], [37.6, 626.0], [37.7, 626.0], [37.8, 626.0], [37.9, 626.0], [38.0, 626.0], [38.1, 631.0], [38.2, 631.0], [38.3, 631.0], [38.4, 631.0], [38.5, 631.0], [38.6, 631.0], [38.7, 631.0], [38.8, 631.0], [38.9, 644.0], [39.0, 644.0], [39.1, 644.0], [39.2, 644.0], [39.3, 644.0], [39.4, 644.0], [39.5, 644.0], [39.6, 662.0], [39.7, 662.0], [39.8, 662.0], [39.9, 662.0], [40.0, 662.0], [40.1, 662.0], [40.2, 662.0], [40.3, 666.0], [40.4, 666.0], [40.5, 666.0], [40.6, 666.0], [40.7, 666.0], [40.8, 666.0], [40.9, 666.0], [41.0, 666.0], [41.1, 670.0], [41.2, 670.0], [41.3, 670.0], [41.4, 670.0], [41.5, 670.0], [41.6, 670.0], [41.7, 670.0], [41.8, 711.0], [41.9, 711.0], [42.0, 711.0], [42.1, 711.0], [42.2, 711.0], [42.3, 711.0], [42.4, 711.0], [42.5, 711.0], [42.6, 713.0], [42.7, 713.0], [42.8, 713.0], [42.9, 713.0], [43.0, 713.0], [43.1, 713.0], [43.2, 713.0], [43.3, 717.0], [43.4, 717.0], [43.5, 717.0], [43.6, 717.0], [43.7, 717.0], [43.8, 717.0], [43.9, 717.0], [44.0, 717.0], [44.1, 788.0], [44.2, 788.0], [44.3, 788.0], [44.4, 788.0], [44.5, 788.0], [44.6, 788.0], [44.7, 788.0], [44.8, 794.0], [44.9, 794.0], [45.0, 794.0], [45.1, 794.0], [45.2, 794.0], [45.3, 794.0], [45.4, 794.0], [45.5, 794.0], [45.6, 808.0], [45.7, 808.0], [45.8, 808.0], [45.9, 808.0], [46.0, 808.0], [46.1, 808.0], [46.2, 808.0], [46.3, 838.0], [46.4, 838.0], [46.5, 838.0], [46.6, 838.0], [46.7, 838.0], [46.8, 838.0], [46.9, 838.0], [47.0, 838.0], [47.1, 838.0], [47.2, 838.0], [47.3, 838.0], [47.4, 838.0], [47.5, 838.0], [47.6, 838.0], [47.7, 838.0], [47.8, 849.0], [47.9, 849.0], [48.0, 849.0], [48.1, 849.0], [48.2, 849.0], [48.3, 849.0], [48.4, 849.0], [48.5, 849.0], [48.6, 868.0], [48.7, 868.0], [48.8, 868.0], [48.9, 868.0], [49.0, 868.0], [49.1, 868.0], [49.2, 868.0], [49.3, 890.0], [49.4, 890.0], [49.5, 890.0], [49.6, 890.0], [49.7, 890.0], [49.8, 890.0], [49.9, 890.0], [50.0, 899.0], [50.1, 899.0], [50.2, 899.0], [50.3, 899.0], [50.4, 899.0], [50.5, 899.0], [50.6, 899.0], [50.7, 899.0], [50.8, 976.0], [50.9, 976.0], [51.0, 976.0], [51.1, 976.0], [51.2, 976.0], [51.3, 976.0], [51.4, 976.0], [51.5, 979.0], [51.6, 979.0], [51.7, 979.0], [51.8, 979.0], [51.9, 979.0], [52.0, 979.0], [52.1, 979.0], [52.2, 979.0], [52.3, 1019.0], [52.4, 1019.0], [52.5, 1019.0], [52.6, 1019.0], [52.7, 1019.0], [52.8, 1019.0], [52.9, 1019.0], [53.0, 1073.0], [53.1, 1073.0], [53.2, 1073.0], [53.3, 1073.0], [53.4, 1073.0], [53.5, 1073.0], [53.6, 1073.0], [53.7, 1073.0], [53.8, 1091.0], [53.9, 1091.0], [54.0, 1091.0], [54.1, 1091.0], [54.2, 1091.0], [54.3, 1091.0], [54.4, 1091.0], [54.5, 1135.0], [54.6, 1135.0], [54.7, 1135.0], [54.8, 1135.0], [54.9, 1135.0], [55.0, 1135.0], [55.1, 1135.0], [55.2, 1135.0], [55.3, 1136.0], [55.4, 1136.0], [55.5, 1136.0], [55.6, 1136.0], [55.7, 1136.0], [55.8, 1136.0], [55.9, 1136.0], [56.0, 1146.0], [56.1, 1146.0], [56.2, 1146.0], [56.3, 1146.0], [56.4, 1146.0], [56.5, 1146.0], [56.6, 1146.0], [56.7, 1146.0], [56.8, 1168.0], [56.9, 1168.0], [57.0, 1168.0], [57.1, 1168.0], [57.2, 1168.0], [57.3, 1168.0], [57.4, 1168.0], [57.5, 1171.0], [57.6, 1171.0], [57.7, 1171.0], [57.8, 1171.0], [57.9, 1171.0], [58.0, 1171.0], [58.1, 1171.0], [58.2, 1171.0], [58.3, 1176.0], [58.4, 1176.0], [58.5, 1176.0], [58.6, 1176.0], [58.7, 1176.0], [58.8, 1176.0], [58.9, 1176.0], [59.0, 1190.0], [59.1, 1190.0], [59.2, 1190.0], [59.3, 1190.0], [59.4, 1190.0], [59.5, 1190.0], [59.6, 1190.0], [59.7, 1190.0], [59.8, 1240.0], [59.9, 1240.0], [60.0, 1240.0], [60.1, 1240.0], [60.2, 1240.0], [60.3, 1240.0], [60.4, 1240.0], [60.5, 1246.0], [60.6, 1246.0], [60.7, 1246.0], [60.8, 1246.0], [60.9, 1246.0], [61.0, 1246.0], [61.1, 1246.0], [61.2, 1248.0], [61.3, 1248.0], [61.4, 1248.0], [61.5, 1248.0], [61.6, 1248.0], [61.7, 1248.0], [61.8, 1248.0], [61.9, 1248.0], [62.0, 1250.0], [62.1, 1250.0], [62.2, 1250.0], [62.3, 1250.0], [62.4, 1250.0], [62.5, 1250.0], [62.6, 1250.0], [62.7, 1269.0], [62.8, 1269.0], [62.9, 1269.0], [63.0, 1269.0], [63.1, 1269.0], [63.2, 1269.0], [63.3, 1269.0], [63.4, 1269.0], [63.5, 1346.0], [63.6, 1346.0], [63.7, 1346.0], [63.8, 1346.0], [63.9, 1346.0], [64.0, 1346.0], [64.1, 1346.0], [64.2, 1367.0], [64.3, 1367.0], [64.4, 1367.0], [64.5, 1367.0], [64.6, 1367.0], [64.7, 1367.0], [64.8, 1367.0], [64.9, 1367.0], [65.0, 1367.0], [65.1, 1367.0], [65.2, 1367.0], [65.3, 1367.0], [65.4, 1367.0], [65.5, 1367.0], [65.6, 1367.0], [65.7, 1377.0], [65.8, 1377.0], [65.9, 1377.0], [66.0, 1377.0], [66.1, 1377.0], [66.2, 1377.0], [66.3, 1377.0], [66.4, 1377.0], [66.5, 1384.0], [66.6, 1384.0], [66.7, 1384.0], [66.8, 1384.0], [66.9, 1384.0], [67.0, 1384.0], [67.1, 1384.0], [67.2, 1386.0], [67.3, 1386.0], [67.4, 1386.0], [67.5, 1386.0], [67.6, 1386.0], [67.7, 1386.0], [67.8, 1386.0], [67.9, 1386.0], [68.0, 1447.0], [68.1, 1447.0], [68.2, 1447.0], [68.3, 1447.0], [68.4, 1447.0], [68.5, 1447.0], [68.6, 1447.0], [68.7, 1448.0], [68.8, 1448.0], [68.9, 1448.0], [69.0, 1448.0], [69.1, 1448.0], [69.2, 1448.0], [69.3, 1448.0], [69.4, 1448.0], [69.5, 1457.0], [69.6, 1457.0], [69.7, 1457.0], [69.8, 1457.0], [69.9, 1457.0], [70.0, 1457.0], [70.1, 1457.0], [70.2, 1528.0], [70.3, 1528.0], [70.4, 1528.0], [70.5, 1528.0], [70.6, 1528.0], [70.7, 1528.0], [70.8, 1528.0], [70.9, 1546.0], [71.0, 1546.0], [71.1, 1546.0], [71.2, 1546.0], [71.3, 1546.0], [71.4, 1546.0], [71.5, 1546.0], [71.6, 1546.0], [71.7, 1559.0], [71.8, 1559.0], [71.9, 1559.0], [72.0, 1559.0], [72.1, 1559.0], [72.2, 1559.0], [72.3, 1559.0], [72.4, 1630.0], [72.5, 1630.0], [72.6, 1630.0], [72.7, 1630.0], [72.8, 1630.0], [72.9, 1630.0], [73.0, 1630.0], [73.1, 1630.0], [73.2, 1638.0], [73.3, 1638.0], [73.4, 1638.0], [73.5, 1638.0], [73.6, 1638.0], [73.7, 1638.0], [73.8, 1638.0], [73.9, 1663.0], [74.0, 1663.0], [74.1, 1663.0], [74.2, 1663.0], [74.3, 1663.0], [74.4, 1663.0], [74.5, 1663.0], [74.6, 1663.0], [74.7, 1672.0], [74.8, 1672.0], [74.9, 1672.0], [75.0, 1672.0], [75.1, 1672.0], [75.2, 1672.0], [75.3, 1672.0], [75.4, 1711.0], [75.5, 1711.0], [75.6, 1711.0], [75.7, 1711.0], [75.8, 1711.0], [75.9, 1711.0], [76.0, 1711.0], [76.1, 1711.0], [76.2, 1753.0], [76.3, 1753.0], [76.4, 1753.0], [76.5, 1753.0], [76.6, 1753.0], [76.7, 1753.0], [76.8, 1753.0], [76.9, 1774.0], [77.0, 1774.0], [77.1, 1774.0], [77.2, 1774.0], [77.3, 1774.0], [77.4, 1774.0], [77.5, 1774.0], [77.6, 1774.0], [77.7, 1775.0], [77.8, 1775.0], [77.9, 1775.0], [78.0, 1775.0], [78.1, 1775.0], [78.2, 1775.0], [78.3, 1775.0], [78.4, 1834.0], [78.5, 1834.0], [78.6, 1834.0], [78.7, 1834.0], [78.8, 1834.0], [78.9, 1834.0], [79.0, 1834.0], [79.1, 1834.0], [79.2, 1838.0], [79.3, 1838.0], [79.4, 1838.0], [79.5, 1838.0], [79.6, 1838.0], [79.7, 1838.0], [79.8, 1838.0], [79.9, 1842.0], [80.0, 1842.0], [80.1, 1842.0], [80.2, 1842.0], [80.3, 1842.0], [80.4, 1842.0], [80.5, 1842.0], [80.6, 1878.0], [80.7, 1878.0], [80.8, 1878.0], [80.9, 1878.0], [81.0, 1878.0], [81.1, 1878.0], [81.2, 1878.0], [81.3, 1878.0], [81.4, 1898.0], [81.5, 1898.0], [81.6, 1898.0], [81.7, 1898.0], [81.8, 1898.0], [81.9, 1898.0], [82.0, 1898.0], [82.1, 1905.0], [82.2, 1905.0], [82.3, 1905.0], [82.4, 1905.0], [82.5, 1905.0], [82.6, 1905.0], [82.7, 1905.0], [82.8, 1905.0], [82.9, 1906.0], [83.0, 1906.0], [83.1, 1906.0], [83.2, 1906.0], [83.3, 1906.0], [83.4, 1906.0], [83.5, 1906.0], [83.6, 1910.0], [83.7, 1910.0], [83.8, 1910.0], [83.9, 1910.0], [84.0, 1910.0], [84.1, 1910.0], [84.2, 1910.0], [84.3, 1910.0], [84.4, 1948.0], [84.5, 1948.0], [84.6, 1948.0], [84.7, 1948.0], [84.8, 1948.0], [84.9, 1948.0], [85.0, 1948.0], [85.1, 1982.0], [85.2, 1982.0], [85.3, 1982.0], [85.4, 1982.0], [85.5, 1982.0], [85.6, 1982.0], [85.7, 1982.0], [85.8, 1982.0], [85.9, 2022.0], [86.0, 2022.0], [86.1, 2022.0], [86.2, 2022.0], [86.3, 2022.0], [86.4, 2022.0], [86.5, 2022.0], [86.6, 2049.0], [86.7, 2049.0], [86.8, 2049.0], [86.9, 2049.0], [87.0, 2049.0], [87.1, 2049.0], [87.2, 2049.0], [87.3, 2049.0], [87.4, 2055.0], [87.5, 2055.0], [87.6, 2055.0], [87.7, 2055.0], [87.8, 2055.0], [87.9, 2055.0], [88.0, 2055.0], [88.1, 2057.0], [88.2, 2057.0], [88.3, 2057.0], [88.4, 2057.0], [88.5, 2057.0], [88.6, 2057.0], [88.7, 2057.0], [88.8, 2057.0], [88.9, 2085.0], [89.0, 2085.0], [89.1, 2085.0], [89.2, 2085.0], [89.3, 2085.0], [89.4, 2085.0], [89.5, 2085.0], [89.6, 2088.0], [89.7, 2088.0], [89.8, 2088.0], [89.9, 2088.0], [90.0, 2088.0], [90.1, 2088.0], [90.2, 2088.0], [90.3, 2231.0], [90.4, 2231.0], [90.5, 2231.0], [90.6, 2231.0], [90.7, 2231.0], [90.8, 2231.0], [90.9, 2231.0], [91.0, 2231.0], [91.1, 2262.0], [91.2, 2262.0], [91.3, 2262.0], [91.4, 2262.0], [91.5, 2262.0], [91.6, 2262.0], [91.7, 2262.0], [91.8, 2280.0], [91.9, 2280.0], [92.0, 2280.0], [92.1, 2280.0], [92.2, 2280.0], [92.3, 2280.0], [92.4, 2280.0], [92.5, 2280.0], [92.6, 2333.0], [92.7, 2333.0], [92.8, 2333.0], [92.9, 2333.0], [93.0, 2333.0], [93.1, 2333.0], [93.2, 2333.0], [93.3, 2341.0], [93.4, 2341.0], [93.5, 2341.0], [93.6, 2341.0], [93.7, 2341.0], [93.8, 2341.0], [93.9, 2341.0], [94.0, 2341.0], [94.1, 2367.0], [94.2, 2367.0], [94.3, 2367.0], [94.4, 2367.0], [94.5, 2367.0], [94.6, 2367.0], [94.7, 2367.0], [94.8, 2546.0], [94.9, 2546.0], [95.0, 2546.0], [95.1, 2546.0], [95.2, 2546.0], [95.3, 2546.0], [95.4, 2546.0], [95.5, 2546.0], [95.6, 2861.0], [95.7, 2861.0], [95.8, 2861.0], [95.9, 2861.0], [96.0, 2861.0], [96.1, 2861.0], [96.2, 2861.0], [96.3, 2964.0], [96.4, 2964.0], [96.5, 2964.0], [96.6, 2964.0], [96.7, 2964.0], [96.8, 2964.0], [96.9, 2964.0], [97.0, 2964.0], [97.1, 2972.0], [97.2, 2972.0], [97.3, 2972.0], [97.4, 2972.0], [97.5, 2972.0], [97.6, 2972.0], [97.7, 2972.0], [97.8, 3158.0], [97.9, 3158.0], [98.0, 3158.0], [98.1, 3158.0], [98.2, 3158.0], [98.3, 3158.0], [98.4, 3158.0], [98.5, 3158.0], [98.6, 3184.0], [98.7, 3184.0], [98.8, 3184.0], [98.9, 3184.0], [99.0, 3184.0], [99.1, 3184.0], [99.2, 3184.0], [99.3, 3202.0], [99.4, 3202.0], [99.5, 3202.0], [99.6, 3202.0], [99.7, 3202.0], [99.8, 3202.0], [99.9, 3202.0], [100.0, 3202.0]], "isOverall": false, "label": "PATCH", "isController": false}, {"data": [[0.0, 418.0], [0.1, 418.0], [0.2, 418.0], [0.3, 418.0], [0.4, 418.0], [0.5, 418.0], [0.6, 418.0], [0.7, 418.0], [0.8, 418.0], [0.9, 418.0], [1.0, 418.0], [1.1, 418.0], [1.2, 418.0], [1.3, 418.0], [1.4, 418.0], [1.5, 418.0], [1.6, 418.0], [1.7, 419.0], [1.8, 419.0], [1.9, 419.0], [2.0, 419.0], [2.1, 419.0], [2.2, 419.0], [2.3, 419.0], [2.4, 419.0], [2.5, 420.0], [2.6, 420.0], [2.7, 420.0], [2.8, 420.0], [2.9, 420.0], [3.0, 420.0], [3.1, 420.0], [3.2, 420.0], [3.3, 420.0], [3.4, 420.0], [3.5, 420.0], [3.6, 420.0], [3.7, 420.0], [3.8, 420.0], [3.9, 420.0], [4.0, 420.0], [4.1, 421.0], [4.2, 421.0], [4.3, 421.0], [4.4, 421.0], [4.5, 421.0], [4.6, 421.0], [4.7, 421.0], [4.8, 421.0], [4.9, 421.0], [5.0, 421.0], [5.1, 421.0], [5.2, 421.0], [5.3, 421.0], [5.4, 421.0], [5.5, 421.0], [5.6, 421.0], [5.7, 421.0], [5.8, 421.0], [5.9, 421.0], [6.0, 421.0], [6.1, 421.0], [6.2, 421.0], [6.3, 421.0], [6.4, 421.0], [6.5, 421.0], [6.6, 422.0], [6.7, 422.0], [6.8, 422.0], [6.9, 422.0], [7.0, 422.0], [7.1, 422.0], [7.2, 422.0], [7.3, 422.0], [7.4, 423.0], [7.5, 423.0], [7.6, 423.0], [7.7, 423.0], [7.8, 423.0], [7.9, 423.0], [8.0, 423.0], [8.1, 423.0], [8.2, 423.0], [8.3, 423.0], [8.4, 423.0], [8.5, 423.0], [8.6, 423.0], [8.7, 423.0], [8.8, 423.0], [8.9, 423.0], [9.0, 423.0], [9.1, 423.0], [9.2, 423.0], [9.3, 423.0], [9.4, 423.0], [9.5, 423.0], [9.6, 423.0], [9.7, 423.0], [9.8, 423.0], [9.9, 423.0], [10.0, 423.0], [10.1, 423.0], [10.2, 423.0], [10.3, 423.0], [10.4, 423.0], [10.5, 423.0], [10.6, 423.0], [10.7, 423.0], [10.8, 423.0], [10.9, 423.0], [11.0, 423.0], [11.1, 423.0], [11.2, 423.0], [11.3, 423.0], [11.4, 425.0], [11.5, 425.0], [11.6, 425.0], [11.7, 425.0], [11.8, 425.0], [11.9, 425.0], [12.0, 425.0], [12.1, 425.0], [12.2, 426.0], [12.3, 426.0], [12.4, 426.0], [12.5, 426.0], [12.6, 426.0], [12.7, 426.0], [12.8, 426.0], [12.9, 426.0], [13.0, 426.0], [13.1, 427.0], [13.2, 427.0], [13.3, 427.0], [13.4, 427.0], [13.5, 427.0], [13.6, 427.0], [13.7, 427.0], [13.8, 427.0], [13.9, 428.0], [14.0, 428.0], [14.1, 428.0], [14.2, 428.0], [14.3, 428.0], [14.4, 428.0], [14.5, 428.0], [14.6, 428.0], [14.7, 435.0], [14.8, 435.0], [14.9, 435.0], [15.0, 435.0], [15.1, 435.0], [15.2, 435.0], [15.3, 435.0], [15.4, 435.0], [15.5, 443.0], [15.6, 443.0], [15.7, 443.0], [15.8, 443.0], [15.9, 443.0], [16.0, 443.0], [16.1, 443.0], [16.2, 443.0], [16.3, 445.0], [16.4, 445.0], [16.5, 445.0], [16.6, 445.0], [16.7, 445.0], [16.8, 445.0], [16.9, 445.0], [17.0, 445.0], [17.1, 451.0], [17.2, 451.0], [17.3, 451.0], [17.4, 451.0], [17.5, 451.0], [17.6, 451.0], [17.7, 451.0], [17.8, 451.0], [17.9, 452.0], [18.0, 452.0], [18.1, 452.0], [18.2, 452.0], [18.3, 452.0], [18.4, 452.0], [18.5, 452.0], [18.6, 452.0], [18.7, 453.0], [18.8, 453.0], [18.9, 453.0], [19.0, 453.0], [19.1, 453.0], [19.2, 453.0], [19.3, 453.0], [19.4, 453.0], [19.5, 453.0], [19.6, 456.0], [19.7, 456.0], [19.8, 456.0], [19.9, 456.0], [20.0, 456.0], [20.1, 456.0], [20.2, 456.0], [20.3, 456.0], [20.4, 468.0], [20.5, 468.0], [20.6, 468.0], [20.7, 468.0], [20.8, 468.0], [20.9, 468.0], [21.0, 468.0], [21.1, 468.0], [21.2, 477.0], [21.3, 477.0], [21.4, 477.0], [21.5, 477.0], [21.6, 477.0], [21.7, 477.0], [21.8, 477.0], [21.9, 477.0], [22.0, 483.0], [22.1, 483.0], [22.2, 483.0], [22.3, 483.0], [22.4, 483.0], [22.5, 483.0], [22.6, 483.0], [22.7, 483.0], [22.8, 484.0], [22.9, 484.0], [23.0, 484.0], [23.1, 484.0], [23.2, 484.0], [23.3, 484.0], [23.4, 484.0], [23.5, 484.0], [23.6, 490.0], [23.7, 490.0], [23.8, 490.0], [23.9, 490.0], [24.0, 490.0], [24.1, 490.0], [24.2, 490.0], [24.3, 490.0], [24.4, 498.0], [24.5, 498.0], [24.6, 498.0], [24.7, 498.0], [24.8, 498.0], [24.9, 498.0], [25.0, 498.0], [25.1, 498.0], [25.2, 498.0], [25.3, 503.0], [25.4, 503.0], [25.5, 503.0], [25.6, 503.0], [25.7, 503.0], [25.8, 503.0], [25.9, 503.0], [26.0, 503.0], [26.1, 509.0], [26.2, 509.0], [26.3, 509.0], [26.4, 509.0], [26.5, 509.0], [26.6, 509.0], [26.7, 509.0], [26.8, 509.0], [26.9, 517.0], [27.0, 517.0], [27.1, 517.0], [27.2, 517.0], [27.3, 517.0], [27.4, 517.0], [27.5, 517.0], [27.6, 517.0], [27.7, 533.0], [27.8, 533.0], [27.9, 533.0], [28.0, 533.0], [28.1, 533.0], [28.2, 533.0], [28.3, 533.0], [28.4, 533.0], [28.5, 560.0], [28.6, 560.0], [28.7, 560.0], [28.8, 560.0], [28.9, 560.0], [29.0, 560.0], [29.1, 560.0], [29.2, 560.0], [29.3, 572.0], [29.4, 572.0], [29.5, 572.0], [29.6, 572.0], [29.7, 572.0], [29.8, 572.0], [29.9, 572.0], [30.0, 572.0], [30.1, 574.0], [30.2, 574.0], [30.3, 574.0], [30.4, 574.0], [30.5, 574.0], [30.6, 574.0], [30.7, 574.0], [30.8, 574.0], [30.9, 576.0], [31.0, 576.0], [31.1, 576.0], [31.2, 576.0], [31.3, 576.0], [31.4, 576.0], [31.5, 576.0], [31.6, 576.0], [31.7, 576.0], [31.8, 596.0], [31.9, 596.0], [32.0, 596.0], [32.1, 596.0], [32.2, 596.0], [32.3, 596.0], [32.4, 596.0], [32.5, 596.0], [32.6, 613.0], [32.7, 613.0], [32.8, 613.0], [32.9, 613.0], [33.0, 613.0], [33.1, 613.0], [33.2, 613.0], [33.3, 613.0], [33.4, 622.0], [33.5, 622.0], [33.6, 622.0], [33.7, 622.0], [33.8, 622.0], [33.9, 622.0], [34.0, 622.0], [34.1, 622.0], [34.2, 625.0], [34.3, 625.0], [34.4, 625.0], [34.5, 625.0], [34.6, 625.0], [34.7, 625.0], [34.8, 625.0], [34.9, 625.0], [35.0, 633.0], [35.1, 633.0], [35.2, 633.0], [35.3, 633.0], [35.4, 633.0], [35.5, 633.0], [35.6, 633.0], [35.7, 633.0], [35.8, 647.0], [35.9, 647.0], [36.0, 647.0], [36.1, 647.0], [36.2, 647.0], [36.3, 647.0], [36.4, 647.0], [36.5, 647.0], [36.6, 676.0], [36.7, 676.0], [36.8, 676.0], [36.9, 676.0], [37.0, 676.0], [37.1, 676.0], [37.2, 676.0], [37.3, 676.0], [37.4, 680.0], [37.5, 680.0], [37.6, 680.0], [37.7, 680.0], [37.8, 680.0], [37.9, 680.0], [38.0, 680.0], [38.1, 680.0], [38.2, 680.0], [38.3, 696.0], [38.4, 696.0], [38.5, 696.0], [38.6, 696.0], [38.7, 696.0], [38.8, 696.0], [38.9, 696.0], [39.0, 696.0], [39.1, 701.0], [39.2, 701.0], [39.3, 701.0], [39.4, 701.0], [39.5, 701.0], [39.6, 701.0], [39.7, 701.0], [39.8, 701.0], [39.9, 708.0], [40.0, 708.0], [40.1, 708.0], [40.2, 708.0], [40.3, 708.0], [40.4, 708.0], [40.5, 708.0], [40.6, 708.0], [40.7, 710.0], [40.8, 710.0], [40.9, 710.0], [41.0, 710.0], [41.1, 710.0], [41.2, 710.0], [41.3, 710.0], [41.4, 710.0], [41.5, 722.0], [41.6, 722.0], [41.7, 722.0], [41.8, 722.0], [41.9, 722.0], [42.0, 722.0], [42.1, 722.0], [42.2, 722.0], [42.3, 725.0], [42.4, 725.0], [42.5, 725.0], [42.6, 725.0], [42.7, 725.0], [42.8, 725.0], [42.9, 725.0], [43.0, 725.0], [43.1, 758.0], [43.2, 758.0], [43.3, 758.0], [43.4, 758.0], [43.5, 758.0], [43.6, 758.0], [43.7, 758.0], [43.8, 758.0], [43.9, 758.0], [44.0, 785.0], [44.1, 785.0], [44.2, 785.0], [44.3, 785.0], [44.4, 785.0], [44.5, 785.0], [44.6, 785.0], [44.7, 785.0], [44.8, 811.0], [44.9, 811.0], [45.0, 811.0], [45.1, 811.0], [45.2, 811.0], [45.3, 811.0], [45.4, 811.0], [45.5, 811.0], [45.6, 823.0], [45.7, 823.0], [45.8, 823.0], [45.9, 823.0], [46.0, 823.0], [46.1, 823.0], [46.2, 823.0], [46.3, 823.0], [46.4, 827.0], [46.5, 827.0], [46.6, 827.0], [46.7, 827.0], [46.8, 827.0], [46.9, 827.0], [47.0, 827.0], [47.1, 827.0], [47.2, 857.0], [47.3, 857.0], [47.4, 857.0], [47.5, 857.0], [47.6, 857.0], [47.7, 857.0], [47.8, 857.0], [47.9, 857.0], [48.0, 857.0], [48.1, 857.0], [48.2, 857.0], [48.3, 857.0], [48.4, 857.0], [48.5, 857.0], [48.6, 857.0], [48.7, 857.0], [48.8, 862.0], [48.9, 862.0], [49.0, 862.0], [49.1, 862.0], [49.2, 862.0], [49.3, 862.0], [49.4, 862.0], [49.5, 862.0], [49.6, 887.0], [49.7, 887.0], [49.8, 887.0], [49.9, 887.0], [50.0, 887.0], [50.1, 887.0], [50.2, 887.0], [50.3, 887.0], [50.4, 887.0], [50.5, 903.0], [50.6, 903.0], [50.7, 903.0], [50.8, 903.0], [50.9, 903.0], [51.0, 903.0], [51.1, 903.0], [51.2, 903.0], [51.3, 907.0], [51.4, 907.0], [51.5, 907.0], [51.6, 907.0], [51.7, 907.0], [51.8, 907.0], [51.9, 907.0], [52.0, 907.0], [52.1, 912.0], [52.2, 912.0], [52.3, 912.0], [52.4, 912.0], [52.5, 912.0], [52.6, 912.0], [52.7, 912.0], [52.8, 912.0], [52.9, 940.0], [53.0, 940.0], [53.1, 940.0], [53.2, 940.0], [53.3, 940.0], [53.4, 940.0], [53.5, 940.0], [53.6, 940.0], [53.7, 956.0], [53.8, 956.0], [53.9, 956.0], [54.0, 956.0], [54.1, 956.0], [54.2, 956.0], [54.3, 956.0], [54.4, 956.0], [54.5, 964.0], [54.6, 964.0], [54.7, 964.0], [54.8, 964.0], [54.9, 964.0], [55.0, 964.0], [55.1, 964.0], [55.2, 964.0], [55.3, 994.0], [55.4, 994.0], [55.5, 994.0], [55.6, 994.0], [55.7, 994.0], [55.8, 994.0], [55.9, 994.0], [56.0, 994.0], [56.1, 1007.0], [56.2, 1007.0], [56.3, 1007.0], [56.4, 1007.0], [56.5, 1007.0], [56.6, 1007.0], [56.7, 1007.0], [56.8, 1007.0], [56.9, 1007.0], [57.0, 1020.0], [57.1, 1020.0], [57.2, 1020.0], [57.3, 1020.0], [57.4, 1020.0], [57.5, 1020.0], [57.6, 1020.0], [57.7, 1020.0], [57.8, 1043.0], [57.9, 1043.0], [58.0, 1043.0], [58.1, 1043.0], [58.2, 1043.0], [58.3, 1043.0], [58.4, 1043.0], [58.5, 1043.0], [58.6, 1073.0], [58.7, 1073.0], [58.8, 1073.0], [58.9, 1073.0], [59.0, 1073.0], [59.1, 1073.0], [59.2, 1073.0], [59.3, 1073.0], [59.4, 1102.0], [59.5, 1102.0], [59.6, 1102.0], [59.7, 1102.0], [59.8, 1102.0], [59.9, 1102.0], [60.0, 1102.0], [60.1, 1102.0], [60.2, 1163.0], [60.3, 1163.0], [60.4, 1163.0], [60.5, 1163.0], [60.6, 1163.0], [60.7, 1163.0], [60.8, 1163.0], [60.9, 1163.0], [61.0, 1185.0], [61.1, 1185.0], [61.2, 1185.0], [61.3, 1185.0], [61.4, 1185.0], [61.5, 1185.0], [61.6, 1185.0], [61.7, 1185.0], [61.8, 1210.0], [61.9, 1210.0], [62.0, 1210.0], [62.1, 1210.0], [62.2, 1210.0], [62.3, 1210.0], [62.4, 1210.0], [62.5, 1210.0], [62.6, 1210.0], [62.7, 1218.0], [62.8, 1218.0], [62.9, 1218.0], [63.0, 1218.0], [63.1, 1218.0], [63.2, 1218.0], [63.3, 1218.0], [63.4, 1218.0], [63.5, 1233.0], [63.6, 1233.0], [63.7, 1233.0], [63.8, 1233.0], [63.9, 1233.0], [64.0, 1233.0], [64.1, 1233.0], [64.2, 1233.0], [64.3, 1246.0], [64.4, 1246.0], [64.5, 1246.0], [64.6, 1246.0], [64.7, 1246.0], [64.8, 1246.0], [64.9, 1246.0], [65.0, 1246.0], [65.1, 1272.0], [65.2, 1272.0], [65.3, 1272.0], [65.4, 1272.0], [65.5, 1272.0], [65.6, 1272.0], [65.7, 1272.0], [65.8, 1272.0], [65.9, 1304.0], [66.0, 1304.0], [66.1, 1304.0], [66.2, 1304.0], [66.3, 1304.0], [66.4, 1304.0], [66.5, 1304.0], [66.6, 1304.0], [66.7, 1305.0], [66.8, 1305.0], [66.9, 1305.0], [67.0, 1305.0], [67.1, 1305.0], [67.2, 1305.0], [67.3, 1305.0], [67.4, 1305.0], [67.5, 1315.0], [67.6, 1315.0], [67.7, 1315.0], [67.8, 1315.0], [67.9, 1315.0], [68.0, 1315.0], [68.1, 1315.0], [68.2, 1315.0], [68.3, 1323.0], [68.4, 1323.0], [68.5, 1323.0], [68.6, 1323.0], [68.7, 1323.0], [68.8, 1323.0], [68.9, 1323.0], [69.0, 1323.0], [69.1, 1323.0], [69.2, 1335.0], [69.3, 1335.0], [69.4, 1335.0], [69.5, 1335.0], [69.6, 1335.0], [69.7, 1335.0], [69.8, 1335.0], [69.9, 1335.0], [70.0, 1335.0], [70.1, 1335.0], [70.2, 1335.0], [70.3, 1335.0], [70.4, 1335.0], [70.5, 1335.0], [70.6, 1335.0], [70.7, 1335.0], [70.8, 1362.0], [70.9, 1362.0], [71.0, 1362.0], [71.1, 1362.0], [71.2, 1362.0], [71.3, 1362.0], [71.4, 1362.0], [71.5, 1362.0], [71.6, 1389.0], [71.7, 1389.0], [71.8, 1389.0], [71.9, 1389.0], [72.0, 1389.0], [72.1, 1389.0], [72.2, 1389.0], [72.3, 1389.0], [72.4, 1403.0], [72.5, 1403.0], [72.6, 1403.0], [72.7, 1403.0], [72.8, 1403.0], [72.9, 1403.0], [73.0, 1403.0], [73.1, 1403.0], [73.2, 1405.0], [73.3, 1405.0], [73.4, 1405.0], [73.5, 1405.0], [73.6, 1405.0], [73.7, 1405.0], [73.8, 1405.0], [73.9, 1405.0], [74.0, 1407.0], [74.1, 1407.0], [74.2, 1407.0], [74.3, 1407.0], [74.4, 1407.0], [74.5, 1407.0], [74.6, 1407.0], [74.7, 1407.0], [74.8, 1417.0], [74.9, 1417.0], [75.0, 1417.0], [75.1, 1417.0], [75.2, 1417.0], [75.3, 1417.0], [75.4, 1417.0], [75.5, 1417.0], [75.6, 1417.0], [75.7, 1489.0], [75.8, 1489.0], [75.9, 1489.0], [76.0, 1489.0], [76.1, 1489.0], [76.2, 1489.0], [76.3, 1489.0], [76.4, 1489.0], [76.5, 1504.0], [76.6, 1504.0], [76.7, 1504.0], [76.8, 1504.0], [76.9, 1504.0], [77.0, 1504.0], [77.1, 1504.0], [77.2, 1504.0], [77.3, 1509.0], [77.4, 1509.0], [77.5, 1509.0], [77.6, 1509.0], [77.7, 1509.0], [77.8, 1509.0], [77.9, 1509.0], [78.0, 1509.0], [78.1, 1532.0], [78.2, 1532.0], [78.3, 1532.0], [78.4, 1532.0], [78.5, 1532.0], [78.6, 1532.0], [78.7, 1532.0], [78.8, 1532.0], [78.9, 1614.0], [79.0, 1614.0], [79.1, 1614.0], [79.2, 1614.0], [79.3, 1614.0], [79.4, 1614.0], [79.5, 1614.0], [79.6, 1614.0], [79.7, 1675.0], [79.8, 1675.0], [79.9, 1675.0], [80.0, 1675.0], [80.1, 1675.0], [80.2, 1675.0], [80.3, 1675.0], [80.4, 1675.0], [80.5, 1764.0], [80.6, 1764.0], [80.7, 1764.0], [80.8, 1764.0], [80.9, 1764.0], [81.0, 1764.0], [81.1, 1764.0], [81.2, 1764.0], [81.3, 1764.0], [81.4, 1801.0], [81.5, 1801.0], [81.6, 1801.0], [81.7, 1801.0], [81.8, 1801.0], [81.9, 1801.0], [82.0, 1801.0], [82.1, 1801.0], [82.2, 1964.0], [82.3, 1964.0], [82.4, 1964.0], [82.5, 1964.0], [82.6, 1964.0], [82.7, 1964.0], [82.8, 1964.0], [82.9, 1964.0], [83.0, 2050.0], [83.1, 2050.0], [83.2, 2050.0], [83.3, 2050.0], [83.4, 2050.0], [83.5, 2050.0], [83.6, 2050.0], [83.7, 2050.0], [83.8, 2066.0], [83.9, 2066.0], [84.0, 2066.0], [84.1, 2066.0], [84.2, 2066.0], [84.3, 2066.0], [84.4, 2066.0], [84.5, 2066.0], [84.6, 2200.0], [84.7, 2200.0], [84.8, 2200.0], [84.9, 2200.0], [85.0, 2200.0], [85.1, 2200.0], [85.2, 2200.0], [85.3, 2200.0], [85.4, 2206.0], [85.5, 2206.0], [85.6, 2206.0], [85.7, 2206.0], [85.8, 2206.0], [85.9, 2206.0], [86.0, 2206.0], [86.1, 2206.0], [86.2, 2258.0], [86.3, 2258.0], [86.4, 2258.0], [86.5, 2258.0], [86.6, 2258.0], [86.7, 2258.0], [86.8, 2258.0], [86.9, 2258.0], [87.0, 2396.0], [87.1, 2396.0], [87.2, 2396.0], [87.3, 2396.0], [87.4, 2396.0], [87.5, 2396.0], [87.6, 2396.0], [87.7, 2396.0], [87.8, 2396.0], [87.9, 2403.0], [88.0, 2403.0], [88.1, 2403.0], [88.2, 2403.0], [88.3, 2403.0], [88.4, 2403.0], [88.5, 2403.0], [88.6, 2403.0], [88.7, 2454.0], [88.8, 2454.0], [88.9, 2454.0], [89.0, 2454.0], [89.1, 2454.0], [89.2, 2454.0], [89.3, 2454.0], [89.4, 2454.0], [89.5, 2474.0], [89.6, 2474.0], [89.7, 2474.0], [89.8, 2474.0], [89.9, 2474.0], [90.0, 2474.0], [90.1, 2474.0], [90.2, 2474.0], [90.3, 2474.0], [90.4, 2474.0], [90.5, 2474.0], [90.6, 2474.0], [90.7, 2474.0], [90.8, 2474.0], [90.9, 2474.0], [91.0, 2474.0], [91.1, 2671.0], [91.2, 2671.0], [91.3, 2671.0], [91.4, 2671.0], [91.5, 2671.0], [91.6, 2671.0], [91.7, 2671.0], [91.8, 2671.0], [91.9, 2755.0], [92.0, 2755.0], [92.1, 2755.0], [92.2, 2755.0], [92.3, 2755.0], [92.4, 2755.0], [92.5, 2755.0], [92.6, 2755.0], [92.7, 2761.0], [92.8, 2761.0], [92.9, 2761.0], [93.0, 2761.0], [93.1, 2761.0], [93.2, 2761.0], [93.3, 2761.0], [93.4, 2761.0], [93.5, 2775.0], [93.6, 2775.0], [93.7, 2775.0], [93.8, 2775.0], [93.9, 2775.0], [94.0, 2775.0], [94.1, 2775.0], [94.2, 2775.0], [94.3, 2775.0], [94.4, 2796.0], [94.5, 2796.0], [94.6, 2796.0], [94.7, 2796.0], [94.8, 2796.0], [94.9, 2796.0], [95.0, 2796.0], [95.1, 2796.0], [95.2, 2809.0], [95.3, 2809.0], [95.4, 2809.0], [95.5, 2809.0], [95.6, 2809.0], [95.7, 2809.0], [95.8, 2809.0], [95.9, 2809.0], [96.0, 2961.0], [96.1, 2961.0], [96.2, 2961.0], [96.3, 2961.0], [96.4, 2961.0], [96.5, 2961.0], [96.6, 2961.0], [96.7, 2961.0], [96.8, 3012.0], [96.9, 3012.0], [97.0, 3012.0], [97.1, 3012.0], [97.2, 3012.0], [97.3, 3012.0], [97.4, 3012.0], [97.5, 3012.0], [97.6, 3024.0], [97.7, 3024.0], [97.8, 3024.0], [97.9, 3024.0], [98.0, 3024.0], [98.1, 3024.0], [98.2, 3024.0], [98.3, 3024.0], [98.4, 3590.0], [98.5, 3590.0], [98.6, 3590.0], [98.7, 3590.0], [98.8, 3590.0], [98.9, 3590.0], [99.0, 3590.0], [99.1, 3590.0], [99.2, 3939.0], [99.3, 3939.0], [99.4, 3939.0], [99.5, 3939.0], [99.6, 3939.0], [99.7, 3939.0], [99.8, 3939.0], [99.9, 3939.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 38.0, "series": [{"data": [[600.0, 10.0], [700.0, 9.0], [800.0, 4.0], [900.0, 6.0], [1000.0, 2.0], [1100.0, 5.0], [1200.0, 7.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 5.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 3.0], [2200.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [2700.0, 1.0], [2900.0, 1.0], [3300.0, 1.0], [3800.0, 1.0], [400.0, 27.0], [500.0, 11.0]], "isOverall": false, "label": "Base64 encode test", "isController": false}, {"data": [[600.0, 12.0], [700.0, 9.0], [800.0, 6.0], [900.0, 3.0], [1000.0, 10.0], [1100.0, 7.0], [1200.0, 4.0], [1300.0, 7.0], [1400.0, 8.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 4.0], [2300.0, 4.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 3.0], [2700.0, 2.0], [2800.0, 1.0], [2900.0, 3.0], [3200.0, 2.0], [3600.0, 1.0], [5900.0, 1.0], [400.0, 30.0], [500.0, 15.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[600.0, 9.0], [700.0, 9.0], [800.0, 13.0], [900.0, 6.0], [1000.0, 7.0], [1100.0, 7.0], [1200.0, 7.0], [1300.0, 7.0], [1400.0, 3.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 7.0], [1800.0, 3.0], [1900.0, 7.0], [2000.0, 4.0], [2100.0, 5.0], [2300.0, 2.0], [2200.0, 2.0], [2500.0, 1.0], [2700.0, 1.0], [2900.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 2.0], [3900.0, 1.0], [400.0, 32.0], [500.0, 9.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[2300.0, 3.0], [2200.0, 3.0], [600.0, 9.0], [2500.0, 1.0], [700.0, 5.0], [2800.0, 1.0], [2900.0, 2.0], [3100.0, 2.0], [800.0, 7.0], [3200.0, 1.0], [900.0, 2.0], [1000.0, 3.0], [1100.0, 7.0], [1200.0, 5.0], [1300.0, 6.0], [1400.0, 3.0], [1500.0, 3.0], [400.0, 38.0], [1600.0, 4.0], [1700.0, 4.0], [1800.0, 5.0], [1900.0, 5.0], [500.0, 9.0], [2000.0, 6.0]], "isOverall": false, "label": "PATCH", "isController": false}, {"data": [[600.0, 8.0], [700.0, 7.0], [800.0, 7.0], [900.0, 7.0], [1000.0, 4.0], [1100.0, 3.0], [1200.0, 5.0], [1300.0, 8.0], [1400.0, 5.0], [1500.0, 3.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 4.0], [2600.0, 1.0], [2700.0, 4.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 2.0], [3500.0, 1.0], [3900.0, 1.0], [400.0, 31.0], [500.0, 9.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 330.0, "series": [{"data": [[0.0, 158.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 330.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 173.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 7.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 48.16766467065868, "minX": 1.76084946E12, "maxY": 48.16766467065868, "series": [{"data": [[1.76084946E12, 48.16766467065868]], "isOverall": false, "label": "TG", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76084946E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 416.0, "minX": 1.0, "maxY": 3382.0, "series": [{"data": [[16.0, 1174.0], [8.0, 1925.0], [37.0, 1192.0], [39.0, 1416.0], [41.0, 431.0], [5.0, 2944.0], [21.0, 921.0], [47.0, 682.0], [50.0, 1069.2211538461538], [25.0, 837.0], [7.0, 2646.0], [29.0, 2011.0]], "isOverall": false, "label": "Base64 encode test", "isController": false}, {"data": [[47.60869565217391, 1107.6347826086958]], "isOverall": false, "label": "Base64 encode test-Aggregated", "isController": false}, {"data": [[1.0, 3272.0], [34.0, 1038.0], [38.0, 2017.0], [19.0, 1033.0], [43.0, 1227.0], [22.0, 1424.0], [12.0, 1554.0], [50.0, 1141.6716417910447], [26.0, 2559.0], [31.0, 1469.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[48.43356643356643, 1178.86013986014]], "isOverall": false, "label": "POST-Aggregated", "isController": false}, {"data": [[33.0, 3382.0], [2.0, 2926.0], [35.0, 507.0], [40.0, 416.0], [20.0, 2190.0], [10.0, 2117.0], [45.0, 485.0], [50.0, 1162.0555555555547], [28.0, 830.0], [15.0, 1179.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[48.549019607843135, 1185.4117647058815]], "isOverall": false, "label": "GET-Aggregated", "isController": false}, {"data": [[32.0, 529.0], [17.0, 1663.0], [36.0, 422.0], [9.0, 2088.0], [44.0, 2231.0], [11.0, 2333.0], [46.0, 421.0], [3.0, 2546.0], [50.0, 1105.9593495934964], [27.0, 1135.0], [14.0, 2861.0], [30.0, 1091.0]], "isOverall": false, "label": "PATCH", "isController": false}, {"data": [[47.902985074626876, 1144.4253731343288]], "isOverall": false, "label": "PATCH-Aggregated", "isController": false}, {"data": [[4.0, 2671.0], [18.0, 2775.0], [42.0, 498.0], [23.0, 2396.0], [48.0, 994.0], [24.0, 2474.0], [6.0, 2206.0], [50.0, 1103.1043478260867], [13.0, 1504.0]], "isOverall": false, "label": "PUT", "isController": false}, {"data": [[48.19512195121951, 1157.5203252032518]], "isOverall": false, "label": "PUT-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1938.4666666666667, "minX": 1.76084946E12, "maxY": 6460.7, "series": [{"data": [[1.76084946E12, 6460.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.76084946E12, 1938.4666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76084946E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1107.6347826086958, "minX": 1.76084946E12, "maxY": 1185.4117647058815, "series": [{"data": [[1.76084946E12, 1107.6347826086958]], "isOverall": false, "label": "Base64 encode test", "isController": false}, {"data": [[1.76084946E12, 1178.86013986014]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.76084946E12, 1185.4117647058815]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.76084946E12, 1144.4253731343288]], "isOverall": false, "label": "PATCH", "isController": false}, {"data": [[1.76084946E12, 1157.5203252032518]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76084946E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1107.4695652173914, "minX": 1.76084946E12, "maxY": 1185.0784313725485, "series": [{"data": [[1.76084946E12, 1107.4695652173914]], "isOverall": false, "label": "Base64 encode test", "isController": false}, {"data": [[1.76084946E12, 1178.7132867132868]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.76084946E12, 1185.0784313725485]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.76084946E12, 1144.2985074626865]], "isOverall": false, "label": "PATCH", "isController": false}, {"data": [[1.76084946E12, 1157.373983739837]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76084946E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 279.74782608695654, "minX": 1.76084946E12, "maxY": 382.59477124182996, "series": [{"data": [[1.76084946E12, 279.74782608695654]], "isOverall": false, "label": "Base64 encode test", "isController": false}, {"data": [[1.76084946E12, 280.23776223776207]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.76084946E12, 382.59477124182996]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.76084946E12, 279.87313432835816]], "isOverall": false, "label": "PATCH", "isController": false}, {"data": [[1.76084946E12, 279.84552845528435]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76084946E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 416.0, "minX": 1.76084946E12, "maxY": 5947.0, "series": [{"data": [[1.76084946E12, 5947.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.76084946E12, 2254.6000000000013]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.76084946E12, 3526.1399999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.76084946E12, 2773.5999999999995]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.76084946E12, 416.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.76084946E12, 890.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76084946E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 698.0, "minX": 1.0, "maxY": 3272.0, "series": [{"data": [[8.0, 2269.5], [35.0, 1048.5], [36.0, 852.0], [39.0, 849.0], [38.0, 796.0], [40.0, 785.0], [41.0, 713.0], [43.0, 1073.0], [45.0, 725.0], [11.0, 2293.0], [51.0, 758.0], [52.0, 804.5], [58.0, 994.0], [1.0, 3272.0], [20.0, 1557.5], [6.0, 2798.5], [25.0, 698.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[39.0, 1480.0], [40.0, 912.0], [45.0, 934.5], [11.0, 2559.0], [58.0, 1281.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 58.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 698.0, "minX": 1.0, "maxY": 3272.0, "series": [{"data": [[8.0, 2269.5], [35.0, 1048.5], [36.0, 852.0], [39.0, 849.0], [38.0, 796.0], [40.0, 785.0], [41.0, 713.0], [43.0, 1073.0], [45.0, 724.5], [11.0, 2293.0], [51.0, 758.0], [52.0, 804.5], [58.0, 994.0], [1.0, 3272.0], [20.0, 1557.0], [6.0, 2798.5], [25.0, 698.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[39.0, 1479.0], [40.0, 912.0], [45.0, 934.0], [11.0, 2559.0], [58.0, 1281.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 58.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.133333333333333, "minX": 1.76084946E12, "maxY": 11.133333333333333, "series": [{"data": [[1.76084946E12, 11.133333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76084946E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.76084946E12, "maxY": 11.016666666666667, "series": [{"data": [[1.76084946E12, 11.016666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.76084946E12, 0.11666666666666667]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76084946E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.76084946E12, "maxY": 2.5166666666666666, "series": [{"data": [[1.76084946E12, 0.03333333333333333]], "isOverall": false, "label": "POST-failure", "isController": false}, {"data": [[1.76084946E12, 2.35]], "isOverall": false, "label": "POST-success", "isController": false}, {"data": [[1.76084946E12, 0.016666666666666666]], "isOverall": false, "label": "PUT-failure", "isController": false}, {"data": [[1.76084946E12, 0.03333333333333333]], "isOverall": false, "label": "PATCH-failure", "isController": false}, {"data": [[1.76084946E12, 2.2]], "isOverall": false, "label": "PATCH-success", "isController": false}, {"data": [[1.76084946E12, 2.5166666666666666]], "isOverall": false, "label": "GET-success", "isController": false}, {"data": [[1.76084946E12, 1.9166666666666667]], "isOverall": false, "label": "Base64 encode test-success", "isController": false}, {"data": [[1.76084946E12, 0.03333333333333333]], "isOverall": false, "label": "GET-failure", "isController": false}, {"data": [[1.76084946E12, 2.033333333333333]], "isOverall": false, "label": "PUT-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76084946E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.76084946E12, "maxY": 11.016666666666667, "series": [{"data": [[1.76084946E12, 11.016666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.76084946E12, 0.11666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76084946E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

